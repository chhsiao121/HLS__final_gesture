// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module threshold_accel_AxiStream2MatStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        in_mat_419_din,
        in_mat_419_full_n,
        in_mat_419_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width_dout,
        last_blk_width_empty_n,
        last_blk_width_read
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp0_stage0 = 10'd256;
parameter    ap_ST_fsm_state20 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] in_mat_419_din;
input   in_mat_419_full_n;
output   in_mat_419_write;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [31:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [3:0] last_blk_width_dout;
input   last_blk_width_empty_n;
output   last_blk_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg in_mat_419_write;
reg rows_read;
reg cols_bound_per_npc_read;
reg last_blk_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1073_reg_778;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter2_reg;
reg   [0:0] icmp_ln1084_reg_813;
reg    in_mat_419_blk_n;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] icmp_ln1104_reg_790;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter9_reg;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg    last_blk_width_blk_n;
reg   [31:0] j_reg_133;
reg   [30:0] i_reg_144;
reg  signed [31:0] rows_read_reg_734;
reg  signed [31:0] cols_bound_per_npc_read_reg_739;
reg   [3:0] last_blk_width_read_reg_746;
wire   [31:0] grp_fu_179_p2;
reg   [31:0] bound_reg_753;
wire    ap_CS_fsm_state8;
wire   [31:0] sub_i_fu_186_p2;
reg   [31:0] sub_i_reg_758;
wire   [5:0] sub4_i_fu_191_p2;
reg   [5:0] sub4_i_reg_763;
wire   [5:0] add_ln1093_fu_197_p2;
reg   [5:0] add_ln1093_reg_768;
wire   [30:0] add_ln1073_fu_203_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_predicate_op93_read_state12;
reg    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state14_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state18_pp0_stage0_iter9;
reg    ap_block_state19_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1073_fu_213_p2;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter1_reg;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter3_reg;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter4_reg;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter5_reg;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter6_reg;
reg   [0:0] icmp_ln1073_reg_778_pp0_iter7_reg;
wire   [0:0] bLast_fu_218_p2;
reg   [0:0] bLast_reg_782;
reg   [0:0] bLast_reg_782_pp0_iter1_reg;
reg   [0:0] bLast_reg_782_pp0_iter2_reg;
reg   [0:0] bLast_reg_782_pp0_iter3_reg;
reg   [0:0] bLast_reg_782_pp0_iter4_reg;
reg   [0:0] bLast_reg_782_pp0_iter5_reg;
reg   [0:0] bLast_reg_782_pp0_iter6_reg;
reg   [0:0] bLast_reg_782_pp0_iter7_reg;
reg   [0:0] bLast_reg_782_pp0_iter8_reg;
wire   [0:0] icmp_ln1104_fu_223_p2;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter1_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter2_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter3_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter4_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter5_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter6_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter7_reg;
reg   [0:0] icmp_ln1104_reg_790_pp0_iter8_reg;
wire   [31:0] j_2_fu_234_p3;
wire   [5:0] ptr_width_minus_fu_242_p3;
reg   [5:0] ptr_width_minus_reg_799;
reg   [31:0] rem_load_reg_804;
wire   [0:0] icmp_ln1084_fu_269_p2;
reg   [0:0] icmp_ln1084_reg_813_pp0_iter3_reg;
reg   [0:0] icmp_ln1084_reg_813_pp0_iter4_reg;
reg   [0:0] icmp_ln1084_reg_813_pp0_iter5_reg;
reg   [0:0] icmp_ln1084_reg_813_pp0_iter6_reg;
reg   [0:0] icmp_ln1084_reg_813_pp0_iter7_reg;
wire   [31:0] sub_ln1093_fu_285_p2;
reg   [31:0] sub_ln1093_reg_817;
wire   [31:0] grp_fu_164_p2;
reg   [31:0] sub_ln1093_1_reg_822;
reg    ap_enable_reg_pp0_iter2;
wire   [5:0] trunc_ln674_1_fu_291_p1;
reg   [5:0] trunc_ln674_1_reg_827;
reg   [5:0] trunc_ln674_1_reg_827_pp0_iter3_reg;
wire   [5:0] trunc_ln674_2_fu_295_p1;
reg   [5:0] trunc_ln674_2_reg_835;
reg   [5:0] trunc_ln674_2_reg_835_pp0_iter3_reg;
wire   [31:0] rem_2_fu_299_p2;
reg   [31:0] rem_2_reg_841;
reg   [26:0] tmp_reg_846;
wire   [5:0] trunc_ln674_fu_315_p1;
reg   [5:0] trunc_ln674_reg_851;
reg   [5:0] trunc_ln674_reg_851_pp0_iter3_reg;
wire  signed [4:0] add_ln1090_fu_319_p2;
reg  signed [4:0] add_ln1090_reg_859;
wire   [3:0] trunc_ln414_1_fu_325_p1;
reg   [3:0] trunc_ln414_1_reg_865;
reg   [3:0] trunc_ln414_1_reg_865_pp0_iter3_reg;
reg   [3:0] trunc_ln414_1_reg_865_pp0_iter4_reg;
reg   [3:0] trunc_ln414_1_reg_865_pp0_iter5_reg;
wire   [31:0] rem_1_fu_329_p2;
reg   [31:0] rem_1_reg_871;
reg   [31:0] p_Val2_load_reg_876;
wire   [0:0] icmp_ln674_1_fu_338_p2;
reg   [0:0] icmp_ln674_1_reg_882;
wire   [0:0] icmp_ln1085_fu_346_p2;
reg   [0:0] icmp_ln1085_reg_889;
reg   [0:0] icmp_ln1085_reg_889_pp0_iter4_reg;
reg   [0:0] icmp_ln1085_reg_889_pp0_iter5_reg;
reg   [0:0] icmp_ln1085_reg_889_pp0_iter6_reg;
wire   [3:0] trunc_ln1086_fu_351_p1;
reg   [3:0] trunc_ln1086_reg_894;
reg   [3:0] trunc_ln1086_reg_894_pp0_iter4_reg;
reg   [3:0] trunc_ln1086_reg_894_pp0_iter5_reg;
wire   [0:0] icmp_ln674_fu_354_p2;
reg   [0:0] icmp_ln674_reg_899;
wire   [31:0] select_ln674_1_fu_374_p3;
reg   [31:0] select_ln674_1_reg_904;
wire   [5:0] select_ln674_2_fu_382_p3;
reg   [5:0] select_ln674_2_reg_909;
reg   [31:0] tmp_8_reg_914;
wire   [5:0] add_ln674_1_fu_404_p2;
reg   [5:0] add_ln674_1_reg_919;
wire   [0:0] icmp_ln414_fu_410_p2;
reg   [0:0] icmp_ln414_reg_924;
reg   [0:0] icmp_ln414_reg_924_pp0_iter4_reg;
reg   [0:0] icmp_ln414_reg_924_pp0_iter5_reg;
reg   [0:0] icmp_ln414_reg_924_pp0_iter6_reg;
reg   [0:0] icmp_ln414_reg_924_pp0_iter7_reg;
wire   [3:0] trunc_ln414_fu_415_p1;
reg   [3:0] trunc_ln414_reg_932;
reg   [3:0] trunc_ln414_reg_932_pp0_iter4_reg;
reg   [3:0] trunc_ln414_reg_932_pp0_iter5_reg;
wire   [3:0] sub_ln414_1_fu_418_p2;
reg   [3:0] sub_ln414_1_reg_939;
wire   [31:0] select_ln674_4_fu_462_p3;
reg   [31:0] select_ln674_4_reg_944;
wire   [5:0] select_ln674_5_fu_468_p3;
reg   [5:0] select_ln674_5_reg_949;
wire   [5:0] sub_ln674_7_fu_474_p2;
reg   [5:0] sub_ln674_7_reg_954;
reg   [5:0] sub_ln674_7_reg_954_pp0_iter5_reg;
reg   [5:0] sub_ln674_7_reg_954_pp0_iter6_reg;
wire   [5:0] sub_ln674_2_fu_497_p2;
reg   [5:0] sub_ln674_2_reg_959;
reg   [5:0] sub_ln674_2_reg_959_pp0_iter5_reg;
reg   [5:0] sub_ln674_2_reg_959_pp0_iter6_reg;
wire   [7:0] shl_ln414_fu_538_p2;
reg   [7:0] shl_ln414_reg_969;
reg   [7:0] shl_ln414_reg_969_pp0_iter5_reg;
reg   [7:0] shl_ln414_reg_969_pp0_iter6_reg;
reg   [7:0] shl_ln414_reg_969_pp0_iter7_reg;
wire   [31:0] grp_fu_506_p2;
reg   [31:0] lshr_ln674_reg_980;
reg   [31:0] lshr_ln674_reg_980_pp0_iter6_reg;
wire   [3:0] sub_ln414_2_fu_557_p2;
reg   [3:0] sub_ln414_2_reg_985;
wire   [31:0] grp_fu_547_p2;
reg   [31:0] lshr_ln674_3_reg_990;
wire   [3:0] sub_ln414_fu_563_p2;
reg   [3:0] sub_ln414_reg_995;
wire   [7:0] and_ln414_fu_592_p2;
reg   [7:0] and_ln414_reg_1000;
reg   [7:0] and_ln414_reg_1000_pp0_iter7_reg;
wire   [7:0] localbuffer_V_6_fu_612_p1;
reg   [7:0] localbuffer_V_6_reg_1006;
wire   [7:0] and_ln414_1_fu_661_p2;
reg   [7:0] and_ln414_1_reg_1011;
wire   [7:0] p_Result_3_fu_687_p2;
wire   [3:0] sub_ln674_8_fu_692_p2;
reg   [3:0] sub_ln674_8_reg_1021;
wire   [7:0] localbuffer2_V_fu_713_p2;
reg   [7:0] localbuffer2_V_reg_1026;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
wire   [7:0] ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter5_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter6_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter7_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter8_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter9_localbuffer_V_8_reg_155;
reg   [31:0] rem_fu_94;
reg   [31:0] ap_sig_allocacmp_rem_load;
reg    ap_block_state1;
reg   [31:0] p_Val2_s_fu_98;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state2;
wire   [5:0] last_blk_width_cast1_i_fu_183_p1;
wire   [31:0] zext_ln1053_fu_209_p1;
wire   [31:0] add_ln1105_fu_228_p2;
wire   [3:0] xf_bits_per_clock_fu_252_p3;
wire   [31:0] zext_ln1079_fu_258_p1;
wire   [5:0] select_ln1093_fu_275_p3;
wire   [31:0] zext_ln1093_fu_281_p1;
wire   [4:0] zext_ln1079_1_fu_262_p1;
wire   [31:0] zext_ln1080_fu_266_p1;
reg   [31:0] tmp_1_fu_359_p4;
wire   [5:0] sub_ln674_fu_369_p2;
wire   [5:0] trunc_ln1090_fu_395_p1;
wire  signed [5:0] sext_ln1090_1_fu_392_p1;
wire   [5:0] sub_ln674_3_fu_398_p2;
wire  signed [31:0] sext_ln1090_fu_389_p1;
wire   [5:0] sub_ln674_4_fu_442_p2;
wire   [5:0] sub_ln674_6_fu_451_p2;
reg   [31:0] tmp_6_fu_433_p4;
wire   [5:0] sub_ln674_5_fu_446_p2;
wire   [5:0] select_ln674_3_fu_455_p3;
wire   [5:0] add_ln674_fu_480_p2;
wire   [5:0] sub_ln674_1_fu_485_p2;
wire   [5:0] select_ln674_fu_490_p3;
wire   [31:0] grp_fu_506_p1;
wire   [31:0] zext_ln674_2_fu_511_p1;
wire   [31:0] lshr_ln674_2_fu_514_p2;
wire   [31:0] p_Result_2_fu_520_p2;
wire   [3:0] select_ln414_2_fu_529_p3;
wire   [7:0] tmp_9_fu_525_p1;
wire   [7:0] zext_ln414_1_fu_534_p1;
wire   [31:0] grp_fu_547_p1;
wire   [3:0] select_ln414_fu_552_p3;
wire   [3:0] select_ln414_1_fu_568_p3;
wire   [7:0] zext_ln414_2_fu_573_p1;
wire   [7:0] zext_ln414_3_fu_577_p1;
wire   [7:0] shl_ln414_1_fu_580_p2;
wire   [7:0] lshr_ln414_1_fu_586_p2;
wire   [31:0] zext_ln674_4_fu_598_p1;
wire   [31:0] lshr_ln674_4_fu_601_p2;
wire   [31:0] p_Result_4_fu_607_p2;
wire   [31:0] zext_ln674_1_fu_616_p1;
wire   [31:0] lshr_ln674_1_fu_619_p2;
wire   [31:0] p_Result_s_fu_625_p2;
wire   [7:0] zext_ln414_fu_634_p1;
wire   [7:0] tmp_7_fu_630_p1;
wire   [7:0] lshr_ln414_fu_637_p2;
wire   [7:0] p_Result_1_fu_643_p2;
wire   [7:0] localbuffer_V_fu_649_p3;
wire   [7:0] xor_ln414_fu_656_p2;
reg   [7:0] tmp_5_fu_667_p4;
wire   [7:0] select_ln414_3_fu_676_p3;
wire   [7:0] and_ln414_2_fu_682_p2;
wire   [7:0] zext_ln674_5_fu_697_p1;
wire   [7:0] lshr_ln674_5_fu_700_p2;
wire   [7:0] select_ln1078_fu_706_p3;
reg    grp_fu_506_ce;
reg    grp_fu_547_ce;
wire    ap_CS_fsm_state20;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_467;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

threshold_accel_mul_32s_32s_32_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_7_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cols_bound_per_npc_read_reg_739),
    .din1(rows_read_reg_734),
    .ce(1'b1),
    .dout(grp_fu_179_p2)
);

threshold_accel_lshr_32ns_6ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
lshr_32ns_6ns_32_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln674_1_reg_904),
    .din1(grp_fu_506_p1),
    .ce(grp_fu_506_ce),
    .dout(grp_fu_506_p2)
);

threshold_accel_lshr_32ns_6ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
lshr_32ns_6ns_32_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln674_4_reg_944),
    .din1(grp_fu_547_p1),
    .ce(grp_fu_547_ce),
    .dout(grp_fu_547_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if (((icmp_ln1084_reg_813_pp0_iter7_reg == 1'd0) & (icmp_ln1073_reg_778_pp0_iter7_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter9_localbuffer_V_8_reg_155 <= localbuffer_V_6_reg_1006;
        end else if (((icmp_ln1084_reg_813_pp0_iter7_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter7_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter9_localbuffer_V_8_reg_155 <= p_Result_3_fu_687_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter8_localbuffer_V_8_reg_155;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_213_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_144 <= add_ln1073_fu_203_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_144 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_213_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_133 <= j_2_fu_234_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_133 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_98 <= 32'd0;
    end else if (((icmp_ln1084_reg_813 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_Val2_s_fu_98 <= ldata1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_94 <= 32'd0;
    end else if (((icmp_ln1084_reg_813 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        rem_fu_94 <= rem_1_reg_871;
    end else if (((icmp_ln1084_reg_813 == 1'd0) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        rem_fu_94 <= rem_2_reg_841;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_fu_269_p2 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter1_reg == 1'd1))) begin
        add_ln1090_reg_859 <= add_ln1090_fu_319_p2;
        rem_1_reg_871 <= rem_1_fu_329_p2;
        tmp_reg_846 <= {{grp_fu_164_p2[31:5]}};
        trunc_ln414_1_reg_865 <= trunc_ln414_1_fu_325_p1;
        trunc_ln674_reg_851 <= trunc_ln674_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln1093_reg_768 <= add_ln1093_fu_197_p2;
        bound_reg_753 <= grp_fu_179_p2;
        sub4_i_reg_763 <= sub4_i_fu_191_p2;
        sub_i_reg_758 <= sub_i_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_813 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln674_1_reg_919 <= add_ln674_1_fu_404_p2;
        icmp_ln1085_reg_889 <= icmp_ln1085_fu_346_p2;
        icmp_ln414_reg_924 <= icmp_ln414_fu_410_p2;
        icmp_ln674_reg_899 <= icmp_ln674_fu_354_p2;
        select_ln674_1_reg_904 <= select_ln674_1_fu_374_p3;
        select_ln674_2_reg_909 <= select_ln674_2_fu_382_p3;
        sub_ln414_1_reg_939 <= sub_ln414_1_fu_418_p2;
        trunc_ln1086_reg_894 <= trunc_ln1086_fu_351_p1;
        trunc_ln414_reg_932 <= trunc_ln414_fu_415_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter6_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter6_reg == 1'd1))) begin
        and_ln414_1_reg_1011 <= and_ln414_1_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter5_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter5_reg == 1'd1))) begin
        and_ln414_reg_1000 <= and_ln414_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln414_reg_1000_pp0_iter7_reg <= and_ln414_reg_1000;
        bLast_reg_782_pp0_iter2_reg <= bLast_reg_782_pp0_iter1_reg;
        bLast_reg_782_pp0_iter3_reg <= bLast_reg_782_pp0_iter2_reg;
        bLast_reg_782_pp0_iter4_reg <= bLast_reg_782_pp0_iter3_reg;
        bLast_reg_782_pp0_iter5_reg <= bLast_reg_782_pp0_iter4_reg;
        bLast_reg_782_pp0_iter6_reg <= bLast_reg_782_pp0_iter5_reg;
        bLast_reg_782_pp0_iter7_reg <= bLast_reg_782_pp0_iter6_reg;
        bLast_reg_782_pp0_iter8_reg <= bLast_reg_782_pp0_iter7_reg;
        icmp_ln1073_reg_778_pp0_iter2_reg <= icmp_ln1073_reg_778_pp0_iter1_reg;
        icmp_ln1073_reg_778_pp0_iter3_reg <= icmp_ln1073_reg_778_pp0_iter2_reg;
        icmp_ln1073_reg_778_pp0_iter4_reg <= icmp_ln1073_reg_778_pp0_iter3_reg;
        icmp_ln1073_reg_778_pp0_iter5_reg <= icmp_ln1073_reg_778_pp0_iter4_reg;
        icmp_ln1073_reg_778_pp0_iter6_reg <= icmp_ln1073_reg_778_pp0_iter5_reg;
        icmp_ln1073_reg_778_pp0_iter7_reg <= icmp_ln1073_reg_778_pp0_iter6_reg;
        icmp_ln1084_reg_813_pp0_iter3_reg <= icmp_ln1084_reg_813;
        icmp_ln1084_reg_813_pp0_iter4_reg <= icmp_ln1084_reg_813_pp0_iter3_reg;
        icmp_ln1084_reg_813_pp0_iter5_reg <= icmp_ln1084_reg_813_pp0_iter4_reg;
        icmp_ln1084_reg_813_pp0_iter6_reg <= icmp_ln1084_reg_813_pp0_iter5_reg;
        icmp_ln1084_reg_813_pp0_iter7_reg <= icmp_ln1084_reg_813_pp0_iter6_reg;
        icmp_ln1085_reg_889_pp0_iter4_reg <= icmp_ln1085_reg_889;
        icmp_ln1085_reg_889_pp0_iter5_reg <= icmp_ln1085_reg_889_pp0_iter4_reg;
        icmp_ln1085_reg_889_pp0_iter6_reg <= icmp_ln1085_reg_889_pp0_iter5_reg;
        icmp_ln1104_reg_790_pp0_iter2_reg <= icmp_ln1104_reg_790_pp0_iter1_reg;
        icmp_ln1104_reg_790_pp0_iter3_reg <= icmp_ln1104_reg_790_pp0_iter2_reg;
        icmp_ln1104_reg_790_pp0_iter4_reg <= icmp_ln1104_reg_790_pp0_iter3_reg;
        icmp_ln1104_reg_790_pp0_iter5_reg <= icmp_ln1104_reg_790_pp0_iter4_reg;
        icmp_ln1104_reg_790_pp0_iter6_reg <= icmp_ln1104_reg_790_pp0_iter5_reg;
        icmp_ln1104_reg_790_pp0_iter7_reg <= icmp_ln1104_reg_790_pp0_iter6_reg;
        icmp_ln1104_reg_790_pp0_iter8_reg <= icmp_ln1104_reg_790_pp0_iter7_reg;
        icmp_ln1104_reg_790_pp0_iter9_reg <= icmp_ln1104_reg_790_pp0_iter8_reg;
        icmp_ln414_reg_924_pp0_iter4_reg <= icmp_ln414_reg_924;
        icmp_ln414_reg_924_pp0_iter5_reg <= icmp_ln414_reg_924_pp0_iter4_reg;
        icmp_ln414_reg_924_pp0_iter6_reg <= icmp_ln414_reg_924_pp0_iter5_reg;
        icmp_ln414_reg_924_pp0_iter7_reg <= icmp_ln414_reg_924_pp0_iter6_reg;
        localbuffer2_V_reg_1026 <= localbuffer2_V_fu_713_p2;
        lshr_ln674_reg_980_pp0_iter6_reg <= lshr_ln674_reg_980;
        shl_ln414_reg_969_pp0_iter5_reg <= shl_ln414_reg_969;
        shl_ln414_reg_969_pp0_iter6_reg <= shl_ln414_reg_969_pp0_iter5_reg;
        shl_ln414_reg_969_pp0_iter7_reg <= shl_ln414_reg_969_pp0_iter6_reg;
        sub_ln674_2_reg_959_pp0_iter5_reg <= sub_ln674_2_reg_959;
        sub_ln674_2_reg_959_pp0_iter6_reg <= sub_ln674_2_reg_959_pp0_iter5_reg;
        sub_ln674_7_reg_954_pp0_iter5_reg <= sub_ln674_7_reg_954;
        sub_ln674_7_reg_954_pp0_iter6_reg <= sub_ln674_7_reg_954_pp0_iter5_reg;
        trunc_ln1086_reg_894_pp0_iter4_reg <= trunc_ln1086_reg_894;
        trunc_ln1086_reg_894_pp0_iter5_reg <= trunc_ln1086_reg_894_pp0_iter4_reg;
        trunc_ln414_1_reg_865_pp0_iter3_reg <= trunc_ln414_1_reg_865;
        trunc_ln414_1_reg_865_pp0_iter4_reg <= trunc_ln414_1_reg_865_pp0_iter3_reg;
        trunc_ln414_1_reg_865_pp0_iter5_reg <= trunc_ln414_1_reg_865_pp0_iter4_reg;
        trunc_ln414_reg_932_pp0_iter4_reg <= trunc_ln414_reg_932;
        trunc_ln414_reg_932_pp0_iter5_reg <= trunc_ln414_reg_932_pp0_iter4_reg;
        trunc_ln674_1_reg_827_pp0_iter3_reg <= trunc_ln674_1_reg_827;
        trunc_ln674_2_reg_835_pp0_iter3_reg <= trunc_ln674_2_reg_835;
        trunc_ln674_reg_851_pp0_iter3_reg <= trunc_ln674_reg_851;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter5_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter6_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter7_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_213_p2 == 1'd1))) begin
        bLast_reg_782 <= bLast_fu_218_p2;
        icmp_ln1104_reg_790 <= icmp_ln1104_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_reg_782_pp0_iter1_reg <= bLast_reg_782;
        icmp_ln1073_reg_778 <= icmp_ln1073_fu_213_p2;
        icmp_ln1073_reg_778_pp0_iter1_reg <= icmp_ln1073_reg_778;
        icmp_ln1104_reg_790_pp0_iter1_reg <= icmp_ln1104_reg_790;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_bound_per_npc_read_reg_739 <= cols_bound_per_npc_dout;
        last_blk_width_read_reg_746 <= last_blk_width_dout;
        rows_read_reg_734 <= rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1073_reg_778_pp0_iter1_reg == 1'd1))) begin
        icmp_ln1084_reg_813 <= icmp_ln1084_fu_269_p2;
        rem_load_reg_804 <= ap_sig_allocacmp_rem_load;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_813 == 1'd0) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln674_1_reg_882 <= icmp_ln674_1_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter6_reg == 1'd0) & (icmp_ln1073_reg_778_pp0_iter6_reg == 1'd1))) begin
        localbuffer_V_6_reg_1006 <= localbuffer_V_6_fu_612_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter5_reg == 1'd0) & (icmp_ln1073_reg_778_pp0_iter5_reg == 1'd1))) begin
        lshr_ln674_3_reg_990 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1085_reg_889_pp0_iter4_reg == 1'd0) & (icmp_ln1084_reg_813_pp0_iter4_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter4_reg == 1'd1))) begin
        lshr_ln674_reg_980 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_load_reg_876 <= p_Val2_s_fu_98;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_778 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ptr_width_minus_reg_799 <= ptr_width_minus_fu_242_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_fu_269_p2 == 1'd0) & (icmp_ln1073_reg_778_pp0_iter1_reg == 1'd1))) begin
        rem_2_reg_841 <= rem_2_fu_299_p2;
        sub_ln1093_reg_817 <= sub_ln1093_fu_285_p2;
        trunc_ln674_1_reg_827 <= trunc_ln674_1_fu_291_p1;
        trunc_ln674_2_reg_835 <= trunc_ln674_2_fu_295_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter3_reg == 1'd0) & (icmp_ln1073_reg_778_pp0_iter3_reg == 1'd1))) begin
        select_ln674_4_reg_944 <= select_ln674_4_fu_462_p3;
        select_ln674_5_reg_949 <= select_ln674_5_fu_468_p3;
        sub_ln674_7_reg_954 <= sub_ln674_7_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter3_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter3_reg == 1'd1))) begin
        shl_ln414_reg_969 <= shl_ln414_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1084_fu_269_p2 == 1'd0) & (icmp_ln1073_reg_778_pp0_iter1_reg == 1'd1))) begin
        sub_ln1093_1_reg_822 <= grp_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_813_pp0_iter4_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter4_reg == 1'd1))) begin
        sub_ln414_2_reg_985 <= sub_ln414_2_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1085_reg_889_pp0_iter5_reg == 1'd0) & (icmp_ln1084_reg_813_pp0_iter5_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter5_reg == 1'd1))) begin
        sub_ln414_reg_995 <= sub_ln414_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1085_reg_889 == 1'd0) & (icmp_ln1084_reg_813_pp0_iter3_reg == 1'd1) & (icmp_ln1073_reg_778_pp0_iter3_reg == 1'd1))) begin
        sub_ln674_2_reg_959 <= sub_ln674_2_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (bLast_reg_782_pp0_iter7_reg == 1'd1))) begin
        sub_ln674_8_reg_1021 <= sub_ln674_8_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op93_read_state12 == 1'b1))) begin
        tmp_8_reg_914 <= ldata1_dout;
    end
end

always @ (*) begin
    if ((icmp_ln1073_fu_213_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_467)) begin
        if ((icmp_ln1084_reg_813 == 1'd1)) begin
            ap_sig_allocacmp_rem_load = rem_1_reg_871;
        end else if ((icmp_ln1084_reg_813 == 1'd0)) begin
            ap_sig_allocacmp_rem_load = rem_2_reg_841;
        end else begin
            ap_sig_allocacmp_rem_load = rem_fu_94;
        end
    end else begin
        ap_sig_allocacmp_rem_load = rem_fu_94;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_506_ce = 1'b1;
    end else begin
        grp_fu_506_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_547_ce = 1'b1;
    end else begin
        grp_fu_547_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        in_mat_419_blk_n = in_mat_419_full_n;
    end else begin
        in_mat_419_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_mat_419_write = 1'b1;
    end else begin
        in_mat_419_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_blk_n = last_blk_width_empty_n;
    end else begin
        last_blk_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_read = 1'b1;
    end else begin
        last_blk_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_813 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op93_read_state12 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_213_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_213_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1073_fu_203_p2 = (i_reg_144 + 31'd1);

assign add_ln1090_fu_319_p2 = ($signed(zext_ln1079_1_fu_262_p1) + $signed(5'd31));

assign add_ln1093_fu_197_p2 = (last_blk_width_cast1_i_fu_183_p1 + 6'd31);

assign add_ln1105_fu_228_p2 = (j_reg_133 + 32'd1);

assign add_ln674_1_fu_404_p2 = (sub_ln674_3_fu_398_p2 + 6'd31);

assign add_ln674_fu_480_p2 = ($signed(trunc_ln674_reg_851_pp0_iter3_reg) + $signed(6'd33));

assign and_ln414_1_fu_661_p2 = (xor_ln414_fu_656_p2 & localbuffer_V_fu_649_p3);

assign and_ln414_2_fu_682_p2 = (select_ln414_3_fu_676_p3 & and_ln414_reg_1000_pp0_iter7_reg);

assign and_ln414_fu_592_p2 = (shl_ln414_1_fu_580_p2 & lshr_ln414_1_fu_586_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (in_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state12 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (in_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state12 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (in_mat_419_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state12 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter3 = ((ldata1_empty_n == 1'b0) & (ap_predicate_op93_read_state12 == 1'b1));
end

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter10 = ((icmp_ln1104_reg_790_pp0_iter9_reg == 1'd1) & (in_mat_419_full_n == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_467 = ((icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155 = 'bx;

always @ (*) begin
    ap_predicate_op93_read_state12 = ((icmp_ln1084_reg_813 == 1'd1) & (icmp_ln1073_reg_778_pp0_iter2_reg == 1'd1));
end

assign bLast_fu_218_p2 = ((j_reg_133 == sub_i_reg_758) ? 1'b1 : 1'b0);

assign grp_fu_164_p2 = (32'd32 - ap_sig_allocacmp_rem_load);

assign grp_fu_506_p1 = select_ln674_2_reg_909;

assign grp_fu_547_p1 = select_ln674_5_reg_949;

assign icmp_ln1073_fu_213_p2 = (($signed(zext_ln1053_fu_209_p1) < $signed(bound_reg_753)) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_269_p2 = (($signed(ap_sig_allocacmp_rem_load) < $signed(zext_ln1079_fu_258_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_346_p2 = ((rem_load_reg_804 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1104_fu_223_p2 = (($signed(j_reg_133) < $signed(cols_bound_per_npc_read_reg_739)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_410_p2 = ((rem_load_reg_804 > sext_ln1090_fu_389_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_338_p2 = ((sub_ln1093_1_reg_822 > sub_ln1093_reg_817) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_354_p2 = ((tmp_reg_846 != 27'd0) ? 1'b1 : 1'b0);

assign in_mat_419_din = localbuffer2_V_reg_1026;

assign j_2_fu_234_p3 = ((bLast_fu_218_p2[0:0] == 1'b1) ? 32'd0 : add_ln1105_fu_228_p2);

assign last_blk_width_cast1_i_fu_183_p1 = last_blk_width_read_reg_746;

assign localbuffer2_V_fu_713_p2 = (select_ln1078_fu_706_p3 & ap_phi_reg_pp0_iter9_localbuffer_V_8_reg_155);

assign localbuffer_V_6_fu_612_p1 = p_Result_4_fu_607_p2[7:0];

assign localbuffer_V_fu_649_p3 = ((icmp_ln1085_reg_889_pp0_iter6_reg[0:0] == 1'b1) ? 8'd0 : p_Result_1_fu_643_p2);

assign lshr_ln414_1_fu_586_p2 = 8'd255 >> zext_ln414_3_fu_577_p1;

assign lshr_ln414_fu_637_p2 = 8'd255 >> zext_ln414_fu_634_p1;

assign lshr_ln674_1_fu_619_p2 = 32'd4294967295 >> zext_ln674_1_fu_616_p1;

assign lshr_ln674_2_fu_514_p2 = 32'd4294967295 >> zext_ln674_2_fu_511_p1;

assign lshr_ln674_4_fu_601_p2 = 32'd4294967295 >> zext_ln674_4_fu_598_p1;

assign lshr_ln674_5_fu_700_p2 = 8'd255 >> zext_ln674_5_fu_697_p1;

assign p_Result_1_fu_643_p2 = (tmp_7_fu_630_p1 & lshr_ln414_fu_637_p2);

assign p_Result_2_fu_520_p2 = (tmp_8_reg_914 & lshr_ln674_2_fu_514_p2);

assign p_Result_3_fu_687_p2 = (and_ln414_2_fu_682_p2 | and_ln414_1_reg_1011);

assign p_Result_4_fu_607_p2 = (lshr_ln674_4_fu_601_p2 & lshr_ln674_3_reg_990);

assign p_Result_s_fu_625_p2 = (lshr_ln674_reg_980_pp0_iter6_reg & lshr_ln674_1_fu_619_p2);

assign ptr_width_minus_fu_242_p3 = ((bLast_reg_782[0:0] == 1'b1) ? sub4_i_reg_763 : 6'd24);

assign rem_1_fu_329_p2 = (ap_sig_allocacmp_rem_load + zext_ln1080_fu_266_p1);

assign rem_2_fu_299_p2 = (ap_sig_allocacmp_rem_load - zext_ln1079_fu_258_p1);

assign select_ln1078_fu_706_p3 = ((bLast_reg_782_pp0_iter8_reg[0:0] == 1'b1) ? lshr_ln674_5_fu_700_p2 : 8'd255);

assign select_ln1093_fu_275_p3 = ((bLast_reg_782_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1093_reg_768 : 6'd39);

assign select_ln414_1_fu_568_p3 = ((icmp_ln414_reg_924_pp0_iter5_reg[0:0] == 1'b1) ? trunc_ln414_1_reg_865_pp0_iter5_reg : trunc_ln414_reg_932_pp0_iter5_reg);

assign select_ln414_2_fu_529_p3 = ((icmp_ln414_reg_924[0:0] == 1'b1) ? sub_ln414_1_reg_939 : trunc_ln414_reg_932);

assign select_ln414_3_fu_676_p3 = ((icmp_ln414_reg_924_pp0_iter7_reg[0:0] == 1'b1) ? tmp_5_fu_667_p4 : shl_ln414_reg_969_pp0_iter7_reg);

assign select_ln414_fu_552_p3 = ((icmp_ln414_reg_924_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln414_reg_932_pp0_iter4_reg : trunc_ln414_1_reg_865_pp0_iter4_reg);

assign select_ln674_1_fu_374_p3 = ((icmp_ln674_fu_354_p2[0:0] == 1'b1) ? tmp_1_fu_359_p4 : p_Val2_s_fu_98);

assign select_ln674_2_fu_382_p3 = ((icmp_ln674_fu_354_p2[0:0] == 1'b1) ? sub_ln674_fu_369_p2 : trunc_ln674_reg_851);

assign select_ln674_3_fu_455_p3 = ((icmp_ln674_1_reg_882[0:0] == 1'b1) ? sub_ln674_4_fu_442_p2 : sub_ln674_6_fu_451_p2);

assign select_ln674_4_fu_462_p3 = ((icmp_ln674_1_reg_882[0:0] == 1'b1) ? tmp_6_fu_433_p4 : p_Val2_load_reg_876);

assign select_ln674_5_fu_468_p3 = ((icmp_ln674_1_reg_882[0:0] == 1'b1) ? sub_ln674_5_fu_446_p2 : trunc_ln674_1_reg_827_pp0_iter3_reg);

assign select_ln674_fu_490_p3 = ((icmp_ln674_reg_899[0:0] == 1'b1) ? add_ln674_fu_480_p2 : sub_ln674_1_fu_485_p2);

assign sext_ln1090_1_fu_392_p1 = add_ln1090_reg_859;

assign sext_ln1090_fu_389_p1 = add_ln1090_reg_859;

assign shl_ln414_1_fu_580_p2 = 8'd255 << zext_ln414_2_fu_573_p1;

assign shl_ln414_fu_538_p2 = tmp_9_fu_525_p1 << zext_ln414_1_fu_534_p1;

assign sub4_i_fu_191_p2 = ($signed(6'd32) - $signed(last_blk_width_cast1_i_fu_183_p1));

assign sub_i_fu_186_p2 = ($signed(cols_bound_per_npc_read_reg_739) + $signed(32'd4294967295));

assign sub_ln1093_fu_285_p2 = (zext_ln1093_fu_281_p1 - ap_sig_allocacmp_rem_load);

assign sub_ln414_1_fu_418_p2 = (4'd7 - trunc_ln414_fu_415_p1);

assign sub_ln414_2_fu_557_p2 = (4'd7 - select_ln414_fu_552_p3);

assign sub_ln414_fu_563_p2 = ($signed(4'd8) - $signed(trunc_ln1086_reg_894_pp0_iter5_reg));

assign sub_ln674_1_fu_485_p2 = (6'd31 - trunc_ln674_reg_851_pp0_iter3_reg);

assign sub_ln674_2_fu_497_p2 = (6'd31 - select_ln674_fu_490_p3);

assign sub_ln674_3_fu_398_p2 = ($signed(trunc_ln1090_fu_395_p1) - $signed(sext_ln1090_1_fu_392_p1));

assign sub_ln674_4_fu_442_p2 = (trunc_ln674_1_reg_827_pp0_iter3_reg - trunc_ln674_2_reg_835_pp0_iter3_reg);

assign sub_ln674_5_fu_446_p2 = (6'd31 - trunc_ln674_1_reg_827_pp0_iter3_reg);

assign sub_ln674_6_fu_451_p2 = (trunc_ln674_2_reg_835_pp0_iter3_reg - trunc_ln674_1_reg_827_pp0_iter3_reg);

assign sub_ln674_7_fu_474_p2 = (6'd31 - select_ln674_3_fu_455_p3);

assign sub_ln674_8_fu_692_p2 = ($signed(4'd8) - $signed(last_blk_width_read_reg_746));

assign sub_ln674_fu_369_p2 = (6'd31 - trunc_ln674_reg_851);

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_98) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_1_fu_359_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_359_p4[ap_tvar_int_0] = p_Val2_s_fu_98[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_reg_969_pp0_iter7_reg) begin
    for (ap_tvar_int_1 = 8 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 7 - 0) begin
            tmp_5_fu_667_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_5_fu_667_p4[ap_tvar_int_1] = shl_ln414_reg_969_pp0_iter7_reg[7 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_load_reg_876) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_6_fu_433_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_6_fu_433_p4[ap_tvar_int_2] = p_Val2_load_reg_876[31 - ap_tvar_int_2];
        end
    end
end

assign tmp_7_fu_630_p1 = p_Result_s_fu_625_p2[7:0];

assign tmp_9_fu_525_p1 = p_Result_2_fu_520_p2[7:0];

assign trunc_ln1086_fu_351_p1 = rem_load_reg_804[3:0];

assign trunc_ln1090_fu_395_p1 = rem_load_reg_804[5:0];

assign trunc_ln414_1_fu_325_p1 = add_ln1090_fu_319_p2[3:0];

assign trunc_ln414_fu_415_p1 = rem_load_reg_804[3:0];

assign trunc_ln674_1_fu_291_p1 = grp_fu_164_p2[5:0];

assign trunc_ln674_2_fu_295_p1 = sub_ln1093_fu_285_p2[5:0];

assign trunc_ln674_fu_315_p1 = grp_fu_164_p2[5:0];

assign xf_bits_per_clock_fu_252_p3 = ((bLast_reg_782_pp0_iter1_reg[0:0] == 1'b1) ? last_blk_width_read_reg_746 : 4'd8);

assign xor_ln414_fu_656_p2 = (8'd255 ^ and_ln414_reg_1000);

assign zext_ln1053_fu_209_p1 = i_reg_144;

assign zext_ln1079_1_fu_262_p1 = xf_bits_per_clock_fu_252_p3;

assign zext_ln1079_fu_258_p1 = xf_bits_per_clock_fu_252_p3;

assign zext_ln1080_fu_266_p1 = ptr_width_minus_reg_799;

assign zext_ln1093_fu_281_p1 = select_ln1093_fu_275_p3;

assign zext_ln414_1_fu_534_p1 = select_ln414_2_fu_529_p3;

assign zext_ln414_2_fu_573_p1 = select_ln414_1_fu_568_p3;

assign zext_ln414_3_fu_577_p1 = sub_ln414_2_reg_985;

assign zext_ln414_fu_634_p1 = sub_ln414_reg_995;

assign zext_ln674_1_fu_616_p1 = sub_ln674_2_reg_959_pp0_iter6_reg;

assign zext_ln674_2_fu_511_p1 = add_ln674_1_reg_919;

assign zext_ln674_4_fu_598_p1 = sub_ln674_7_reg_954_pp0_iter6_reg;

assign zext_ln674_5_fu_697_p1 = sub_ln674_8_reg_1021;

endmodule //threshold_accel_AxiStream2MatStream
