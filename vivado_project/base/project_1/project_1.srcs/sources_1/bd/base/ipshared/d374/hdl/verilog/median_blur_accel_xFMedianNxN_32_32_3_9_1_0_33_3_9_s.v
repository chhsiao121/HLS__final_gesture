// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module median_blur_accel_xFMedianNxN_32_32_3_9_1_0_33_3_9_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_419_dout,
        imgInput_419_empty_n,
        imgInput_419_read,
        imgOutput_420_din,
        imgOutput_420_full_n,
        imgOutput_420_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_pp1_stage0 = 11'd16;
parameter    ap_ST_fsm_state7 = 11'd32;
parameter    ap_ST_fsm_pp2_stage0 = 11'd64;
parameter    ap_ST_fsm_state11 = 11'd128;
parameter    ap_ST_fsm_state12 = 11'd256;
parameter    ap_ST_fsm_pp3_stage0 = 11'd512;
parameter    ap_ST_fsm_state23 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] imgInput_419_dout;
input   imgInput_419_empty_n;
output   imgInput_419_read;
output  [23:0] imgOutput_420_din;
input   imgOutput_420_full_n;
output   imgOutput_420_write;
input  [5:0] img_height;
input  [5:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg imgInput_419_read;
reg imgOutput_420_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    imgInput_419_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln167_reg_1093;
reg   [0:0] and_ln174_reg_1104;
reg    imgOutput_420_blk_n;
reg    ap_enable_reg_pp3_iter9;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter8_reg;
reg   [0:0] icmp_ln882_reg_1123;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter8_reg;
reg   [5:0] col_V_reg_288;
reg   [5:0] col_V_1_reg_300;
reg   [6:0] col_V_4_reg_356;
reg   [6:0] col_V_4_reg_356_pp3_iter1_reg;
wire    ap_block_state13_pp3_stage0_iter0;
reg    ap_predicate_op153_read_state14;
reg    ap_block_state14_pp3_stage0_iter1;
wire    ap_block_state15_pp3_stage0_iter2;
wire    ap_block_state16_pp3_stage0_iter3;
wire    ap_block_state17_pp3_stage0_iter4;
wire    ap_block_state18_pp3_stage0_iter5;
wire    ap_block_state19_pp3_stage0_iter6;
wire    ap_block_state20_pp3_stage0_iter7;
wire    ap_block_state21_pp3_stage0_iter8;
reg    ap_predicate_op207_write_state22;
reg    ap_block_state22_pp3_stage0_iter9;
reg    ap_block_pp3_stage0_11001;
reg   [23:0] src_buf_V_2_0_reg_368;
reg   [23:0] src_buf_V_1_2_3_reg_380;
reg   [23:0] src_buf_V_0_2_3_reg_392;
reg   [23:0] src_buf_V_2_0_0_reg_404;
reg   [23:0] src_buf_V_1_0_0_reg_416;
reg   [23:0] src_buf_V_0_0_0_reg_428;
reg   [23:0] src_buf_V_1_0_1_reg_440;
reg   [23:0] src_buf_V_0_0_1_reg_452;
reg   [23:0] storemerge_reg_464;
wire   [1:0] init_row_ind_fu_495_p2;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_0_0_load_reg_929;
reg   [12:0] row_ind_V_1_0_load_reg_934;
reg   [12:0] row_ind_V_2_0_load_reg_941;
wire   [63:0] zext_ln534_fu_535_p1;
wire    ap_CS_fsm_state3;
wire   [6:0] zext_ln1616_fu_538_p1;
reg   [6:0] zext_ln1616_reg_955;
wire   [63:0] zext_ln393_fu_541_p1;
reg   [63:0] zext_ln393_reg_961;
wire   [0:0] icmp_ln878_24_fu_544_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] trunc_ln403_fu_549_p1;
reg   [1:0] trunc_ln403_reg_970;
wire   [1:0] trunc_ln418_fu_553_p1;
reg   [1:0] trunc_ln418_reg_974;
wire   [5:0] col_V_3_fu_556_p2;
reg   [5:0] col_V_3_reg_979;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln397_fu_562_p2;
reg   [0:0] icmp_ln397_reg_984;
wire   [63:0] add_ln393_fu_574_p2;
wire    ap_CS_fsm_state7;
wire   [5:0] col_V_2_fu_580_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_state10_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln409_fu_586_p2;
reg   [0:0] icmp_ln409_reg_998;
reg   [0:0] icmp_ln409_reg_998_pp2_iter1_reg;
reg   [4:0] buf_V_0_addr_reg_1002;
reg   [4:0] buf_V_0_addr_reg_1002_pp2_iter1_reg;
wire   [23:0] tmp_fu_598_p5;
reg   [23:0] tmp_reg_1018;
wire   [6:0] img_height_cast_fu_609_p1;
reg   [6:0] img_height_cast_reg_1023;
wire    ap_CS_fsm_state11;
wire  signed [7:0] sext_ln424_fu_618_p1;
reg  signed [7:0] sext_ln424_reg_1028;
wire   [6:0] add_ln424_fu_622_p2;
reg   [6:0] add_ln424_reg_1034;
wire   [6:0] add_ln424_1_fu_627_p2;
reg   [6:0] add_ln424_1_reg_1039;
wire   [0:0] icmp_ln424_fu_637_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] cmp_i_i245_i_fu_642_p2;
reg   [0:0] cmp_i_i245_i_reg_1048;
wire   [1:0] empty_41_fu_667_p1;
reg   [1:0] empty_41_reg_1053;
wire   [0:0] spec_select_fu_679_p2;
reg   [0:0] spec_select_reg_1058;
wire   [0:0] spec_select51_fu_691_p2;
reg   [0:0] spec_select51_reg_1063;
wire   [0:0] spec_select52_fu_703_p2;
reg   [0:0] spec_select52_reg_1068;
wire   [1:0] trunc_ln175_fu_709_p1;
reg   [1:0] trunc_ln175_reg_1073;
wire   [1:0] trunc_ln306_fu_713_p1;
reg   [1:0] trunc_ln306_reg_1078;
wire   [1:0] trunc_ln306_1_fu_717_p1;
reg   [1:0] trunc_ln306_1_reg_1083;
wire   [6:0] col_V_5_fu_721_p2;
reg   [6:0] col_V_5_reg_1088;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln167_fu_727_p2;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter1_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter2_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter3_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter4_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter5_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter6_reg;
reg   [0:0] icmp_ln167_reg_1093_pp3_iter7_reg;
wire   [0:0] icmp_ln878_29_fu_732_p2;
reg   [0:0] icmp_ln878_29_reg_1097;
reg   [0:0] icmp_ln878_29_reg_1097_pp3_iter1_reg;
reg   [0:0] icmp_ln878_29_reg_1097_pp3_iter2_reg;
wire   [0:0] and_ln174_fu_737_p2;
wire   [0:0] icmp_ln882_fu_756_p2;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter3_reg;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter4_reg;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter5_reg;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter6_reg;
reg   [0:0] icmp_ln882_reg_1123_pp3_iter7_reg;
wire   [23:0] src_buf_V_1_1_fu_867_p3;
reg   [23:0] src_buf_V_1_1_reg_1127;
reg    ap_enable_reg_pp3_iter3;
wire   [23:0] src_buf_V_0_1_fu_874_p3;
reg   [23:0] src_buf_V_0_1_reg_1134;
wire   [23:0] src_buf_V_2_0_2_fu_881_p3;
reg   [23:0] src_buf_V_2_0_2_reg_1141;
wire   [23:0] grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_return;
reg   [23:0] OutputValues_V_0_reg_1148;
wire   [6:0] row_V_1_fu_888_p2;
wire    ap_CS_fsm_state23;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_condition_pp3_exit_iter4_state17;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg   [4:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [23:0] buf_V_0_q0;
reg   [4:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [23:0] buf_V_0_d1;
reg   [4:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [23:0] buf_V_1_q0;
reg   [4:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [4:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [23:0] buf_V_2_q0;
reg   [4:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg    grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_ce;
wire    ap_block_state13_pp3_stage0_iter0_ignore_call21;
reg    ap_block_state14_pp3_stage0_iter1_ignore_call21;
wire    ap_block_state15_pp3_stage0_iter2_ignore_call21;
wire    ap_block_state16_pp3_stage0_iter3_ignore_call21;
wire    ap_block_state17_pp3_stage0_iter4_ignore_call21;
wire    ap_block_state18_pp3_stage0_iter5_ignore_call21;
wire    ap_block_state19_pp3_stage0_iter6_ignore_call21;
wire    ap_block_state20_pp3_stage0_iter7_ignore_call21;
wire    ap_block_state21_pp3_stage0_iter8_ignore_call21;
reg    ap_block_state22_pp3_stage0_iter9_ignore_call21;
reg    ap_block_pp3_stage0_11001_ignoreCallOp198;
wire   [1:0] ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4;
reg   [1:0] row_ind_V_0_2_reg_267;
wire   [0:0] icmp_ln878_fu_510_p2;
reg   [63:0] init_buf_reg_278;
reg   [5:0] ap_phi_mux_col_V_phi_fu_292_p4;
reg   [12:0] row_ind_V_1_1_reg_311;
reg   [12:0] row_ind_V_2_reg_332;
reg   [12:0] row_ind_V_0_reg_321;
reg   [6:0] row_V_reg_344;
reg   [6:0] ap_phi_mux_col_V_4_phi_fu_360_p4;
reg   [23:0] ap_phi_mux_src_buf_V_2_0_phi_fu_372_p4;
reg   [23:0] ap_phi_mux_src_buf_V_1_2_3_phi_fu_384_p4;
reg   [23:0] ap_phi_mux_src_buf_V_0_2_3_phi_fu_396_p4;
reg   [23:0] ap_phi_mux_src_buf_V_2_0_0_phi_fu_408_p4;
reg   [23:0] ap_phi_mux_src_buf_V_1_0_0_phi_fu_420_p4;
reg   [23:0] ap_phi_mux_src_buf_V_0_0_0_phi_fu_432_p4;
wire   [23:0] ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_440;
reg   [23:0] ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_440;
reg   [23:0] ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_440;
reg   [23:0] ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_440;
reg   [23:0] ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_440;
wire   [23:0] ap_phi_reg_pp3_iter0_src_buf_V_0_0_1_reg_452;
reg   [23:0] ap_phi_reg_pp3_iter1_src_buf_V_0_0_1_reg_452;
reg   [23:0] ap_phi_reg_pp3_iter2_src_buf_V_0_0_1_reg_452;
reg   [23:0] ap_phi_reg_pp3_iter3_src_buf_V_0_0_1_reg_452;
reg   [23:0] ap_phi_reg_pp3_iter4_src_buf_V_0_0_1_reg_452;
wire   [23:0] ap_phi_reg_pp3_iter0_storemerge_reg_464;
reg   [23:0] ap_phi_reg_pp3_iter1_storemerge_reg_464;
reg   [23:0] ap_phi_reg_pp3_iter2_storemerge_reg_464;
reg   [23:0] ap_phi_reg_pp3_iter3_storemerge_reg_464;
reg   [23:0] ap_phi_reg_pp3_iter4_storemerge_reg_464;
wire   [63:0] zext_ln534_1_fu_567_p1;
wire   [63:0] conv_i135_fu_591_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln534_2_fu_742_p1;
wire   [63:0] conv_i102_i_fu_749_p1;
reg   [12:0] row_ind_V_0_0_fu_104;
wire   [12:0] zext_ln301_fu_516_p1;
reg   [12:0] row_ind_V_1_0_fu_108;
reg   [12:0] row_ind_V_2_0_fu_112;
reg    ap_block_pp3_stage0_01001;
wire   [6:0] sub218_i_fu_612_p2;
wire   [7:0] zext_ln878_fu_633_p1;
wire   [7:0] sub_i_i177_i_fu_652_p2;
wire   [6:0] empty_fu_657_p1;
wire   [6:0] sub_i160_i_cast_fu_661_p2;
wire   [0:0] cmp_i_i203_i_fu_647_p2;
wire   [0:0] tmp_8_fu_671_p3;
wire   [0:0] cmp_i_i148_i_1_fu_685_p2;
wire   [0:0] cmp_i_i148_i_2_fu_697_p2;
wire   [12:0] tmp_1_fu_762_p5;
wire   [1:0] trunc_ln304_fu_773_p1;
wire   [23:0] tmp_2_fu_777_p5;
wire   [23:0] tmp_3_fu_789_p5;
wire   [23:0] tmp_4_fu_807_p5;
wire   [23:0] tmp_5_fu_819_p5;
wire   [23:0] tmp_6_fu_837_p5;
wire   [23:0] tmp_7_fu_849_p5;
wire   [23:0] src_buf_V_1_2_fu_830_p3;
wire   [23:0] src_buf_V_0_2_fu_800_p3;
wire   [23:0] arrayidx252_i539_load_0_2_fu_860_p3;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
end

median_blur_accel_xFMedianNxN_32_32_3_9_1_0_33_3_9_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

median_blur_accel_xFMedianNxN_32_32_3_9_1_0_33_3_9_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(imgInput_419_dout)
);

median_blur_accel_xFMedianNxN_32_32_3_9_1_0_33_3_9_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(imgInput_419_dout)
);

median_blur_accel_xFMedianProc_3_1_9_3_9_s grp_xFMedianProc_3_1_9_3_9_s_fu_476(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read1(ap_phi_mux_src_buf_V_0_0_0_phi_fu_432_p4),
    .p_read2(src_buf_V_0_2_3_reg_392),
    .p_read3(src_buf_V_0_1_reg_1134),
    .p_read4(ap_phi_mux_src_buf_V_1_0_0_phi_fu_420_p4),
    .p_read5(src_buf_V_1_2_3_reg_380),
    .p_read6(src_buf_V_1_1_reg_1127),
    .p_read7(ap_phi_mux_src_buf_V_2_0_0_phi_fu_408_p4),
    .p_read8(src_buf_V_2_0_reg_368),
    .p_read9(src_buf_V_2_0_2_reg_1141),
    .ap_return(grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_return),
    .ap_ce(grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_ce)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U79(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln418_reg_974),
    .dout(tmp_fu_598_p5)
);

median_blur_accel_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U80(
    .din0(row_ind_V_2_reg_332),
    .din1(row_ind_V_0_reg_321),
    .din2(row_ind_V_1_1_reg_311),
    .din3(empty_41_reg_1053),
    .dout(tmp_1_fu_762_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U81(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln304_fu_773_p1),
    .dout(tmp_2_fu_777_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U82(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln306_reg_1078),
    .dout(tmp_3_fu_789_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U83(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln304_fu_773_p1),
    .dout(tmp_4_fu_807_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U84(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln306_1_reg_1083),
    .dout(tmp_5_fu_819_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U85(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln304_fu_773_p1),
    .dout(tmp_6_fu_837_p5)
);

median_blur_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U86(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln175_reg_1073),
    .dout(tmp_7_fu_849_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state8)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter4_state17)) begin
                ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp3_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1123 == 1'd1) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_src_buf_V_0_0_1_reg_452 <= src_buf_V_0_1_fu_874_p3;
        end else if (((icmp_ln882_reg_1123 == 1'd0) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_src_buf_V_0_0_1_reg_452 <= ap_phi_mux_src_buf_V_0_2_3_phi_fu_396_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter4_src_buf_V_0_0_1_reg_452 <= ap_phi_reg_pp3_iter3_src_buf_V_0_0_1_reg_452;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1123 == 1'd1) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_440 <= src_buf_V_1_1_fu_867_p3;
        end else if (((icmp_ln882_reg_1123 == 1'd0) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_440 <= ap_phi_mux_src_buf_V_1_2_3_phi_fu_384_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_440 <= ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_440;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1123 == 1'd1) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_storemerge_reg_464 <= src_buf_V_2_0_2_fu_881_p3;
        end else if (((icmp_ln882_reg_1123 == 1'd0) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp3_iter4_storemerge_reg_464 <= ap_phi_mux_src_buf_V_2_0_phi_fu_372_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter4_storemerge_reg_464 <= ap_phi_reg_pp3_iter3_storemerge_reg_464;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd0))) begin
        col_V_1_reg_300 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln409_fu_586_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        col_V_1_reg_300 <= col_V_2_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_4_reg_356 <= col_V_5_reg_1088;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        col_V_4_reg_356 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln397_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_reg_288 <= col_V_3_reg_979;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd1))) begin
        col_V_reg_288 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_buf_reg_278 <= zext_ln534_fu_535_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_buf_reg_278 <= add_ln393_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_V_reg_344 <= row_V_1_fu_888_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_V_reg_344 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_2_reg_267 <= init_row_ind_fu_495_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_ind_V_0_2_reg_267 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_0_reg_321 <= row_ind_V_1_1_reg_311;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_ind_V_0_reg_321 <= row_ind_V_1_0_load_reg_934;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_1_1_reg_311 <= row_ind_V_2_reg_332;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_ind_V_1_1_reg_311 <= row_ind_V_2_0_load_reg_941;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_2_reg_332 <= row_ind_V_0_reg_321;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_ind_V_2_reg_332 <= row_ind_V_0_0_load_reg_929;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        src_buf_V_0_0_0_reg_428 <= src_buf_V_0_0_1_reg_452;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_0_0_0_reg_428 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        src_buf_V_0_2_3_reg_392 <= src_buf_V_0_1_reg_1134;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_0_2_3_reg_392 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        src_buf_V_1_0_0_reg_416 <= src_buf_V_1_0_1_reg_440;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_1_0_0_reg_416 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        src_buf_V_1_2_3_reg_380 <= src_buf_V_1_1_reg_1127;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_1_2_3_reg_380 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        src_buf_V_2_0_0_reg_404 <= storemerge_reg_464;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_2_0_0_reg_404 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        src_buf_V_2_0_reg_368 <= src_buf_V_2_0_2_reg_1141;
    end else if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        src_buf_V_2_0_reg_368 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln167_reg_1093_pp3_iter7_reg == 1'd0))) begin
        OutputValues_V_0_reg_1148 <= grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln424_1_reg_1039 <= add_ln424_1_fu_627_p2;
        add_ln424_reg_1034 <= add_ln424_fu_622_p2;
        img_height_cast_reg_1023[5 : 0] <= img_height_cast_fu_609_p1[5 : 0];
        sext_ln424_reg_1028 <= sext_ln424_fu_618_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln167_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln174_reg_1104 <= and_ln174_fu_737_p2;
        icmp_ln878_29_reg_1097 <= icmp_ln878_29_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_reg_pp3_iter1_src_buf_V_0_0_1_reg_452 <= ap_phi_reg_pp3_iter0_src_buf_V_0_0_1_reg_452;
        ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_440 <= ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_440;
        ap_phi_reg_pp3_iter1_storemerge_reg_464 <= ap_phi_reg_pp3_iter0_storemerge_reg_464;
        col_V_5_reg_1088 <= col_V_5_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_reg_pp3_iter2_src_buf_V_0_0_1_reg_452 <= ap_phi_reg_pp3_iter1_src_buf_V_0_0_1_reg_452;
        ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_440 <= ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_440;
        ap_phi_reg_pp3_iter2_storemerge_reg_464 <= ap_phi_reg_pp3_iter1_storemerge_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_phi_reg_pp3_iter3_src_buf_V_0_0_1_reg_452 <= ap_phi_reg_pp3_iter2_src_buf_V_0_0_1_reg_452;
        ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_440 <= ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_440;
        ap_phi_reg_pp3_iter3_storemerge_reg_464 <= ap_phi_reg_pp3_iter2_storemerge_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln409_fu_586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_addr_reg_1002 <= conv_i135_fu_591_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_addr_reg_1002_pp2_iter1_reg <= buf_V_0_addr_reg_1002;
        icmp_ln409_reg_998 <= icmp_ln409_fu_586_p2;
        icmp_ln409_reg_998_pp2_iter1_reg <= icmp_ln409_reg_998;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        cmp_i_i245_i_reg_1048 <= cmp_i_i245_i_fu_642_p2;
        empty_41_reg_1053 <= empty_41_fu_667_p1;
        spec_select51_reg_1063 <= spec_select51_fu_691_p2;
        spec_select52_reg_1068 <= spec_select52_fu_703_p2;
        spec_select_reg_1058 <= spec_select_fu_679_p2;
        trunc_ln175_reg_1073 <= trunc_ln175_fu_709_p1;
        trunc_ln306_1_reg_1083 <= trunc_ln306_1_fu_717_p1;
        trunc_ln306_reg_1078 <= trunc_ln306_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_3_reg_979 <= col_V_3_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_4_reg_356_pp3_iter1_reg <= col_V_4_reg_356;
        icmp_ln167_reg_1093 <= icmp_ln167_fu_727_p2;
        icmp_ln167_reg_1093_pp3_iter1_reg <= icmp_ln167_reg_1093;
        icmp_ln878_29_reg_1097_pp3_iter1_reg <= icmp_ln878_29_reg_1097;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln167_reg_1093_pp3_iter2_reg <= icmp_ln167_reg_1093_pp3_iter1_reg;
        icmp_ln167_reg_1093_pp3_iter3_reg <= icmp_ln167_reg_1093_pp3_iter2_reg;
        icmp_ln167_reg_1093_pp3_iter4_reg <= icmp_ln167_reg_1093_pp3_iter3_reg;
        icmp_ln167_reg_1093_pp3_iter5_reg <= icmp_ln167_reg_1093_pp3_iter4_reg;
        icmp_ln167_reg_1093_pp3_iter6_reg <= icmp_ln167_reg_1093_pp3_iter5_reg;
        icmp_ln167_reg_1093_pp3_iter7_reg <= icmp_ln167_reg_1093_pp3_iter6_reg;
        icmp_ln167_reg_1093_pp3_iter8_reg <= icmp_ln167_reg_1093_pp3_iter7_reg;
        icmp_ln878_29_reg_1097_pp3_iter2_reg <= icmp_ln878_29_reg_1097_pp3_iter1_reg;
        icmp_ln882_reg_1123_pp3_iter3_reg <= icmp_ln882_reg_1123;
        icmp_ln882_reg_1123_pp3_iter4_reg <= icmp_ln882_reg_1123_pp3_iter3_reg;
        icmp_ln882_reg_1123_pp3_iter5_reg <= icmp_ln882_reg_1123_pp3_iter4_reg;
        icmp_ln882_reg_1123_pp3_iter6_reg <= icmp_ln882_reg_1123_pp3_iter5_reg;
        icmp_ln882_reg_1123_pp3_iter7_reg <= icmp_ln882_reg_1123_pp3_iter6_reg;
        icmp_ln882_reg_1123_pp3_iter8_reg <= icmp_ln882_reg_1123_pp3_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln397_reg_984 <= icmp_ln397_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln167_reg_1093_pp3_iter1_reg == 1'd0))) begin
        icmp_ln882_reg_1123 <= icmp_ln882_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_510_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_104[1 : 0] <= zext_ln301_fu_516_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_V_0_0_load_reg_929[1 : 0] <= row_ind_V_0_0_fu_104[1 : 0];
        row_ind_V_1_0_load_reg_934[1 : 0] <= row_ind_V_1_0_fu_108[1 : 0];
        row_ind_V_2_0_load_reg_941[1 : 0] <= row_ind_V_2_0_fu_112[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_510_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_108[1 : 0] <= zext_ln301_fu_516_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4 == 2'd1) & ~(ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4 == 2'd0) & (icmp_ln878_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_112[1 : 0] <= zext_ln301_fu_516_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        src_buf_V_0_0_1_reg_452 <= ap_phi_reg_pp3_iter4_src_buf_V_0_0_1_reg_452;
        src_buf_V_1_0_1_reg_440 <= ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_440;
        storemerge_reg_464 <= ap_phi_reg_pp3_iter4_storemerge_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter2_reg == 1'd0))) begin
        src_buf_V_0_1_reg_1134 <= src_buf_V_0_1_fu_874_p3;
        src_buf_V_1_1_reg_1127 <= src_buf_V_1_1_fu_867_p3;
        src_buf_V_2_0_2_reg_1141 <= src_buf_V_2_0_2_fu_881_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln409_reg_998 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_reg_1018 <= tmp_fu_598_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd1))) begin
        trunc_ln403_reg_970 <= trunc_ln403_fu_549_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd0))) begin
        trunc_ln418_reg_974 <= trunc_ln418_fu_553_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln1616_reg_955[5 : 0] <= zext_ln1616_fu_538_p1[5 : 0];
        zext_ln393_reg_961[1 : 0] <= zext_ln393_fu_541_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln397_fu_562_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln409_fu_586_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
        ap_condition_pp3_exit_iter4_state17 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter4_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln167_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln424_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_col_V_4_phi_fu_360_p4 = col_V_5_reg_1088;
    end else begin
        ap_phi_mux_col_V_4_phi_fu_360_p4 = col_V_4_reg_356;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln397_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_phi_fu_292_p4 = col_V_3_reg_979;
    end else begin
        ap_phi_mux_col_V_phi_fu_292_p4 = col_V_reg_288;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_0_0_0_phi_fu_432_p4 = src_buf_V_0_0_1_reg_452;
    end else begin
        ap_phi_mux_src_buf_V_0_0_0_phi_fu_432_p4 = src_buf_V_0_0_0_reg_428;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_0_2_3_phi_fu_396_p4 = src_buf_V_0_1_reg_1134;
    end else begin
        ap_phi_mux_src_buf_V_0_2_3_phi_fu_396_p4 = src_buf_V_0_2_3_reg_392;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_1_0_0_phi_fu_420_p4 = src_buf_V_1_0_1_reg_440;
    end else begin
        ap_phi_mux_src_buf_V_1_0_0_phi_fu_420_p4 = src_buf_V_1_0_0_reg_416;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_1_2_3_phi_fu_384_p4 = src_buf_V_1_1_reg_1127;
    end else begin
        ap_phi_mux_src_buf_V_1_2_3_phi_fu_384_p4 = src_buf_V_1_2_3_reg_380;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter4_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_2_0_0_phi_fu_408_p4 = storemerge_reg_464;
    end else begin
        ap_phi_mux_src_buf_V_2_0_0_phi_fu_408_p4 = src_buf_V_2_0_0_reg_404;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln167_reg_1093_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_372_p4 = src_buf_V_2_0_2_reg_1141;
    end else begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_372_p4 = src_buf_V_2_0_reg_368;
    end
end

always @ (*) begin
    if (((icmp_ln424_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_0_address0 = conv_i102_i_fu_749_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_address0 = conv_i135_fu_591_p1;
    end else begin
        buf_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_0_address1 = zext_ln534_2_fu_742_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        buf_V_0_address1 = buf_V_0_addr_reg_1002_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address1 = zext_ln534_1_fu_567_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        buf_V_0_d1 = tmp_reg_1018;
    end else if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_d1 = imgInput_419_dout;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln174_reg_1104) & (icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln175_reg_1073 == 2'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln409_reg_998_pp2_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln403_reg_970 == 2'd0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_1_address0 = conv_i102_i_fu_749_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_1_address0 = conv_i135_fu_591_p1;
    end else begin
        buf_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_1_address1 = zext_ln534_2_fu_742_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address1 = zext_ln534_1_fu_567_p1;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln174_reg_1104) & (icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln175_reg_1073 == 2'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln403_reg_970 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_2_address0 = conv_i102_i_fu_749_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_2_address0 = conv_i135_fu_591_p1;
    end else begin
        buf_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_2_address1 = zext_ln534_2_fu_742_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_2_address1 = zext_ln534_1_fu_567_p1;
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln175_reg_1073 == 2'd0) & ~(trunc_ln175_reg_1073 == 2'd1) & (1'd1 == and_ln174_reg_1104) & (icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln403_reg_970 == 2'd0) & ~(trunc_ln403_reg_970 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001_ignoreCallOp198) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_ce = 1'b1;
    end else begin
        grp_xFMedianProc_3_1_9_3_9_s_fu_476_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln174_reg_1104) & (icmp_ln167_reg_1093 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        imgInput_419_blk_n = imgInput_419_empty_n;
    end else begin
        imgInput_419_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        imgInput_419_read = 1'b1;
    end else begin
        imgInput_419_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1123_pp3_iter8_reg == 1'd0) & (icmp_ln167_reg_1093_pp3_iter8_reg == 1'd0) & (ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        imgOutput_420_blk_n = imgOutput_420_full_n;
    end else begin
        imgOutput_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_predicate_op207_write_state22 == 1'b1))) begin
        imgOutput_420_write = 1'b1;
    end else begin
        imgOutput_420_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln878_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_24_fu_544_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln397_fu_562_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln397_fu_562_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln409_fu_586_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln409_fu_586_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln424_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0)) & ~((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter8 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter8 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln393_fu_574_p2 = (init_buf_reg_278 + 64'd1);

assign add_ln424_1_fu_627_p2 = (img_height_cast_fu_609_p1 + 7'd1);

assign add_ln424_fu_622_p2 = (zext_ln1616_reg_955 + 7'd1);

assign and_ln174_fu_737_p2 = (icmp_ln878_29_fu_732_p2 & cmp_i_i245_i_reg_1048);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0)) | ((ap_enable_reg_pp3_iter9 == 1'b1) & (imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0)) | ((ap_enable_reg_pp3_iter9 == 1'b1) & (imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001_ignoreCallOp198 = (((ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0)) | ((ap_enable_reg_pp3_iter9 == 1'b1) & (imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgInput_419_empty_n == 1'b0)) | ((ap_enable_reg_pp3_iter9 == 1'b1) & (imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1)));
end

assign ap_block_state10_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter0_ignore_call21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp3_stage0_iter1 = ((ap_predicate_op153_read_state14 == 1'b1) & (imgInput_419_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp3_stage0_iter1_ignore_call21 = ((ap_predicate_op153_read_state14 == 1'b1) & (imgInput_419_empty_n == 1'b0));
end

assign ap_block_state15_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter3_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter8_ignore_call21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp3_stage0_iter9 = ((imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1));
end

always @ (*) begin
    ap_block_state22_pp3_stage0_iter9_ignore_call21 = ((imgOutput_420_full_n == 1'b0) & (ap_predicate_op207_write_state22 == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = (imgInput_419_empty_n == 1'b0);
end

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_0_2_phi_fu_271_p4 = row_ind_V_0_2_reg_267;

assign ap_phi_reg_pp3_iter0_src_buf_V_0_0_1_reg_452 = 'bx;

assign ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_440 = 'bx;

assign ap_phi_reg_pp3_iter0_storemerge_reg_464 = 'bx;

always @ (*) begin
    ap_predicate_op153_read_state14 = ((1'd1 == and_ln174_reg_1104) & (icmp_ln167_reg_1093 == 1'd0));
end

always @ (*) begin
    ap_predicate_op207_write_state22 = ((icmp_ln882_reg_1123_pp3_iter8_reg == 1'd0) & (icmp_ln167_reg_1093_pp3_iter8_reg == 1'd0));
end

assign arrayidx252_i539_load_0_2_fu_860_p3 = ((spec_select52_reg_1068[0:0] == 1'b1) ? tmp_6_fu_837_p5 : tmp_7_fu_849_p5);

assign cmp_i_i148_i_1_fu_685_p2 = (($signed(sub_i160_i_cast_fu_661_p2) < $signed(7'd1)) ? 1'b1 : 1'b0);

assign cmp_i_i148_i_2_fu_697_p2 = (($signed(sub_i_i177_i_fu_652_p2) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign cmp_i_i203_i_fu_647_p2 = (($signed(zext_ln878_fu_633_p1) > $signed(sext_ln424_reg_1028)) ? 1'b1 : 1'b0);

assign cmp_i_i245_i_fu_642_p2 = ((row_V_reg_344 < img_height_cast_reg_1023) ? 1'b1 : 1'b0);

assign col_V_2_fu_580_p2 = (col_V_1_reg_300 + 6'd1);

assign col_V_3_fu_556_p2 = (ap_phi_mux_col_V_phi_fu_292_p4 + 6'd1);

assign col_V_5_fu_721_p2 = (ap_phi_mux_col_V_4_phi_fu_360_p4 + 7'd1);

assign conv_i102_i_fu_749_p1 = col_V_4_reg_356_pp3_iter1_reg;

assign conv_i135_fu_591_p1 = col_V_1_reg_300;

assign empty_41_fu_667_p1 = sub_i160_i_cast_fu_661_p2[1:0];

assign empty_fu_657_p1 = sub_i_i177_i_fu_652_p2[6:0];

assign icmp_ln167_fu_727_p2 = ((ap_phi_mux_col_V_4_phi_fu_360_p4 == add_ln424_reg_1034) ? 1'b1 : 1'b0);

assign icmp_ln397_fu_562_p2 = ((ap_phi_mux_col_V_phi_fu_292_p4 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln409_fu_586_p2 = ((col_V_1_reg_300 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_637_p2 = ((row_V_reg_344 == add_ln424_1_reg_1039) ? 1'b1 : 1'b0);

assign icmp_ln878_24_fu_544_p2 = (($signed(init_buf_reg_278) < $signed(zext_ln393_reg_961)) ? 1'b1 : 1'b0);

assign icmp_ln878_29_fu_732_p2 = ((ap_phi_mux_col_V_4_phi_fu_360_p4 < zext_ln1616_reg_955) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_510_p2 = ((row_ind_V_0_2_reg_267 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_756_p2 = ((col_V_4_reg_356_pp3_iter1_reg == 7'd0) ? 1'b1 : 1'b0);

assign imgOutput_420_din = OutputValues_V_0_reg_1148;

assign img_height_cast_fu_609_p1 = img_height;

assign init_row_ind_fu_495_p2 = (row_ind_V_0_2_reg_267 + 2'd1);

assign row_V_1_fu_888_p2 = (row_V_reg_344 + 7'd1);

assign sext_ln424_fu_618_p1 = $signed(sub218_i_fu_612_p2);

assign spec_select51_fu_691_p2 = (cmp_i_i203_i_fu_647_p2 & cmp_i_i148_i_1_fu_685_p2);

assign spec_select52_fu_703_p2 = (cmp_i_i203_i_fu_647_p2 & cmp_i_i148_i_2_fu_697_p2);

assign spec_select_fu_679_p2 = (tmp_8_fu_671_p3 & cmp_i_i203_i_fu_647_p2);

assign src_buf_V_0_1_fu_874_p3 = ((icmp_ln878_29_reg_1097_pp3_iter2_reg[0:0] == 1'b1) ? src_buf_V_0_2_fu_800_p3 : ap_phi_mux_src_buf_V_0_2_3_phi_fu_396_p4);

assign src_buf_V_0_2_fu_800_p3 = ((spec_select_reg_1058[0:0] == 1'b1) ? tmp_2_fu_777_p5 : tmp_3_fu_789_p5);

assign src_buf_V_1_1_fu_867_p3 = ((icmp_ln878_29_reg_1097_pp3_iter2_reg[0:0] == 1'b1) ? src_buf_V_1_2_fu_830_p3 : ap_phi_mux_src_buf_V_1_2_3_phi_fu_384_p4);

assign src_buf_V_1_2_fu_830_p3 = ((spec_select51_reg_1063[0:0] == 1'b1) ? tmp_4_fu_807_p5 : tmp_5_fu_819_p5);

assign src_buf_V_2_0_2_fu_881_p3 = ((icmp_ln878_29_reg_1097_pp3_iter2_reg[0:0] == 1'b1) ? arrayidx252_i539_load_0_2_fu_860_p3 : ap_phi_mux_src_buf_V_2_0_phi_fu_372_p4);

assign sub218_i_fu_612_p2 = ($signed(img_height_cast_fu_609_p1) + $signed(7'd127));

assign sub_i160_i_cast_fu_661_p2 = (7'd2 - empty_fu_657_p1);

assign sub_i_i177_i_fu_652_p2 = ($signed(zext_ln878_fu_633_p1) - $signed(sext_ln424_reg_1028));

assign tmp_8_fu_671_p3 = sub_i160_i_cast_fu_661_p2[32'd6];

assign trunc_ln175_fu_709_p1 = row_ind_V_1_1_reg_311[1:0];

assign trunc_ln304_fu_773_p1 = tmp_1_fu_762_p5[1:0];

assign trunc_ln306_1_fu_717_p1 = row_ind_V_0_reg_321[1:0];

assign trunc_ln306_fu_713_p1 = row_ind_V_2_reg_332[1:0];

assign trunc_ln403_fu_549_p1 = init_buf_reg_278[1:0];

assign trunc_ln418_fu_553_p1 = row_ind_V_1_0_load_reg_934[1:0];

assign zext_ln1616_fu_538_p1 = img_width;

assign zext_ln301_fu_516_p1 = row_ind_V_0_2_reg_267;

assign zext_ln393_fu_541_p1 = row_ind_V_2_0_load_reg_941;

assign zext_ln534_1_fu_567_p1 = col_V_reg_288;

assign zext_ln534_2_fu_742_p1 = col_V_4_reg_356;

assign zext_ln534_fu_535_p1 = row_ind_V_1_0_load_reg_934;

assign zext_ln878_fu_633_p1 = row_V_reg_344;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_929[12:2] <= 11'b00000000000;
    row_ind_V_1_0_load_reg_934[12:2] <= 11'b00000000000;
    row_ind_V_2_0_load_reg_941[12:2] <= 11'b00000000000;
    zext_ln1616_reg_955[6] <= 1'b0;
    zext_ln393_reg_961[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    img_height_cast_reg_1023[6] <= 1'b0;
    row_ind_V_0_0_fu_104[12:2] <= 11'b00000000000;
    row_ind_V_1_0_fu_108[12:2] <= 11'b00000000000;
    row_ind_V_2_0_fu_112[12:2] <= 11'b00000000000;
end

endmodule //median_blur_accel_xFMedianNxN_32_32_3_9_1_0_33_3_9_s
