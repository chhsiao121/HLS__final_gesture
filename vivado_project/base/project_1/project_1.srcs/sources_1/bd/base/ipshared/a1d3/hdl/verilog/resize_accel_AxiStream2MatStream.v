// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resize_accel_AxiStream2MatStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        in_mat_418_din,
        in_mat_418_full_n,
        in_mat_418_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width_dout,
        last_blk_width_empty_n,
        last_blk_width_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] in_mat_418_din;
input   in_mat_418_full_n;
output   in_mat_418_write;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [31:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [3:0] last_blk_width_dout;
input   last_blk_width_empty_n;
output   last_blk_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg in_mat_418_write;
reg rows_read;
reg cols_bound_per_npc_read;
reg last_blk_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1073_reg_799;
reg   [0:0] icmp_ln1073_reg_799_pp0_iter1_reg;
reg   [0:0] icmp_ln1084_reg_820;
reg    in_mat_418_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln1104_reg_811;
reg   [0:0] icmp_ln1104_reg_811_pp0_iter3_reg;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg    last_blk_width_blk_n;
reg   [31:0] j_reg_133;
reg   [30:0] i_reg_144;
reg  signed [31:0] rows_read_reg_755;
reg  signed [31:0] cols_bound_per_npc_read_reg_760;
reg   [3:0] last_blk_width_read_reg_767;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] bound_reg_774;
wire    ap_CS_fsm_state3;
wire   [31:0] sub_i_fu_191_p2;
reg   [31:0] sub_i_reg_779;
wire   [5:0] sub4_i_fu_196_p2;
reg   [5:0] sub4_i_reg_784;
wire   [5:0] add_ln1093_fu_202_p2;
reg   [5:0] add_ln1093_reg_789;
wire   [30:0] add_ln1073_fu_208_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op102_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1073_fu_218_p2;
reg   [0:0] icmp_ln1073_reg_799_pp0_iter2_reg;
wire   [0:0] bLast_fu_223_p2;
reg   [0:0] bLast_reg_803;
reg   [0:0] bLast_reg_803_pp0_iter1_reg;
reg   [0:0] bLast_reg_803_pp0_iter2_reg;
reg   [0:0] bLast_reg_803_pp0_iter3_reg;
wire   [0:0] icmp_ln1104_fu_228_p2;
reg   [0:0] icmp_ln1104_reg_811_pp0_iter1_reg;
reg   [0:0] icmp_ln1104_reg_811_pp0_iter2_reg;
wire   [31:0] j_3_fu_239_p3;
wire   [0:0] icmp_ln1084_fu_275_p2;
reg   [0:0] icmp_ln1084_reg_820_pp0_iter2_reg;
wire   [0:0] icmp_ln674_1_fu_297_p2;
reg   [0:0] icmp_ln674_1_reg_824;
wire   [5:0] trunc_ln674_1_fu_303_p1;
reg   [5:0] trunc_ln674_1_reg_830;
wire   [5:0] sub_ln674_7_fu_331_p2;
reg   [5:0] sub_ln674_7_reg_836;
reg   [5:0] sub_ln674_7_reg_836_pp0_iter2_reg;
wire   [0:0] icmp_ln1085_fu_348_p2;
reg   [0:0] icmp_ln1085_reg_841;
reg   [0:0] icmp_ln1085_reg_841_pp0_iter2_reg;
wire   [3:0] trunc_ln1086_fu_354_p1;
reg   [3:0] trunc_ln1086_reg_846;
wire   [0:0] icmp_ln674_fu_368_p2;
reg   [0:0] icmp_ln674_reg_851;
wire   [5:0] trunc_ln674_fu_374_p1;
reg   [5:0] trunc_ln674_reg_858;
wire   [5:0] add_ln674_1_fu_402_p2;
reg   [5:0] add_ln674_1_reg_865;
wire   [0:0] icmp_ln414_fu_408_p2;
reg   [0:0] icmp_ln414_reg_870;
reg   [0:0] icmp_ln414_reg_870_pp0_iter2_reg;
wire   [3:0] trunc_ln414_fu_414_p1;
reg   [3:0] trunc_ln414_reg_878;
wire   [3:0] trunc_ln414_1_fu_418_p1;
reg   [3:0] trunc_ln414_1_reg_886;
wire   [31:0] lshr_ln674_3_fu_468_p2;
reg   [31:0] lshr_ln674_3_reg_892;
wire   [5:0] sub_ln674_2_fu_509_p2;
reg   [5:0] sub_ln674_2_reg_897;
wire   [31:0] lshr_ln674_fu_519_p2;
reg   [31:0] lshr_ln674_reg_902;
wire   [3:0] sub_ln414_fu_525_p2;
reg   [3:0] sub_ln414_reg_907;
wire   [7:0] shl_ln414_fu_588_p2;
reg   [7:0] shl_ln414_reg_912;
wire   [7:0] and_ln414_fu_606_p2;
reg   [7:0] and_ln414_reg_918;
wire   [7:0] localbuffer_V_6_fu_631_p1;
wire   [7:0] p_Result_10_fu_706_p2;
wire   [3:0] sub_ln674_8_fu_712_p2;
reg   [3:0] sub_ln674_8_reg_934;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155;
reg   [7:0] ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155;
reg   [31:0] rem_fu_94;
wire   [31:0] rem_2_fu_337_p2;
wire   [31:0] rem_1_fu_422_p2;
reg    ap_block_state1;
reg   [31:0] p_Val2_s_fu_98;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state2;
wire   [5:0] last_blk_width_cast1_i_fu_188_p1;
wire   [31:0] zext_ln1053_fu_214_p1;
wire   [31:0] add_ln1105_fu_233_p2;
wire   [3:0] xf_bits_per_clock_fu_251_p3;
wire   [5:0] ptr_width_minus_fu_265_p3;
wire   [31:0] zext_ln1079_fu_257_p1;
wire   [5:0] select_ln1093_fu_281_p3;
wire   [31:0] zext_ln1093_fu_287_p1;
wire   [31:0] grp_fu_164_p2;
wire   [31:0] sub_ln1093_fu_291_p2;
wire   [5:0] trunc_ln674_2_fu_307_p1;
wire   [5:0] sub_ln674_4_fu_311_p2;
wire   [5:0] sub_ln674_6_fu_317_p2;
wire   [5:0] select_ln674_3_fu_323_p3;
wire   [26:0] tmp_fu_358_p4;
wire   [4:0] zext_ln1079_1_fu_261_p1;
wire  signed [4:0] add_ln1090_fu_378_p2;
wire   [5:0] trunc_ln1090_fu_392_p1;
wire  signed [5:0] sext_ln1090_1_fu_388_p1;
wire   [5:0] sub_ln674_3_fu_396_p2;
wire  signed [31:0] sext_ln1090_fu_384_p1;
wire   [31:0] zext_ln1080_fu_271_p1;
reg   [31:0] tmp_13_fu_436_p4;
wire   [5:0] sub_ln674_5_fu_446_p2;
wire   [5:0] select_ln674_5_fu_458_p3;
wire   [31:0] select_ln674_4_fu_451_p3;
wire   [31:0] zext_ln674_3_fu_464_p1;
wire   [5:0] add_ln674_fu_484_p2;
wire   [5:0] grp_fu_169_p2;
reg   [31:0] tmp_8_fu_474_p4;
wire   [5:0] select_ln674_fu_489_p3;
wire   [5:0] select_ln674_2_fu_503_p3;
wire   [31:0] select_ln674_1_fu_496_p3;
wire   [31:0] zext_ln674_fu_515_p1;
wire   [31:0] zext_ln674_2_fu_530_p1;
wire   [31:0] lshr_ln674_2_fu_533_p2;
wire   [31:0] p_Result_9_fu_539_p2;
wire   [3:0] sub_ln414_1_fu_549_p2;
wire   [3:0] select_ln414_fu_554_p3;
wire   [3:0] select_ln414_2_fu_564_p3;
wire   [3:0] select_ln414_1_fu_559_p3;
wire   [3:0] sub_ln414_2_fu_570_p2;
wire   [7:0] tmp_16_fu_545_p1;
wire   [7:0] zext_ln414_1_fu_576_p1;
wire   [7:0] zext_ln414_2_fu_580_p1;
wire   [7:0] zext_ln414_3_fu_584_p1;
wire   [7:0] shl_ln414_1_fu_594_p2;
wire   [7:0] lshr_ln414_1_fu_600_p2;
wire   [31:0] zext_ln674_4_fu_617_p1;
wire   [31:0] lshr_ln674_4_fu_620_p2;
wire   [31:0] p_Result_11_fu_626_p2;
wire   [31:0] zext_ln674_1_fu_635_p1;
wire   [31:0] lshr_ln674_1_fu_638_p2;
wire   [31:0] p_Result_s_fu_644_p2;
wire   [7:0] zext_ln414_fu_653_p1;
wire   [7:0] tmp_14_fu_649_p1;
wire   [7:0] lshr_ln414_fu_656_p2;
wire   [7:0] p_Result_8_fu_662_p2;
reg   [7:0] tmp_12_fu_675_p4;
wire   [7:0] localbuffer_V_fu_668_p3;
wire   [7:0] xor_ln414_fu_690_p2;
wire   [7:0] select_ln414_3_fu_684_p3;
wire   [7:0] and_ln414_1_fu_695_p2;
wire   [7:0] and_ln414_2_fu_701_p2;
wire   [7:0] zext_ln674_5_fu_717_p1;
wire   [7:0] lshr_ln674_5_fu_720_p2;
wire   [7:0] select_ln1078_fu_726_p3;
wire    ap_CS_fsm_state9;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

resize_accel_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cols_bound_per_npc_read_reg_760),
    .din1(rows_read_reg_755),
    .ce(1'b1),
    .dout(grp_fu_184_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1084_reg_820_pp0_iter2_reg == 1'd0) & (icmp_ln1073_reg_799_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155 <= localbuffer_V_6_fu_631_p1;
        end else if (((icmp_ln1084_reg_820_pp0_iter2_reg == 1'd1) & (icmp_ln1073_reg_799_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155 <= p_Result_10_fu_706_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_218_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_144 <= add_ln1073_fu_208_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_144 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_218_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_133 <= j_3_fu_239_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_133 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_98 <= 32'd0;
    end else if (((icmp_ln1084_reg_820 == 1'd1) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_s_fu_98 <= ldata1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_94 <= 32'd0;
    end else if (((icmp_ln1073_reg_799 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd1))) begin
        rem_fu_94 <= rem_1_fu_422_p2;
    end else if (((icmp_ln1073_reg_799 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd0))) begin
        rem_fu_94 <= rem_2_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1093_reg_789 <= add_ln1093_fu_202_p2;
        bound_reg_774 <= grp_fu_184_p2;
        sub4_i_reg_784 <= sub4_i_fu_196_p2;
        sub_i_reg_779 <= sub_i_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_799 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd1))) begin
        add_ln674_1_reg_865 <= add_ln674_1_fu_402_p2;
        icmp_ln1085_reg_841 <= icmp_ln1085_fu_348_p2;
        icmp_ln414_reg_870 <= icmp_ln414_fu_408_p2;
        icmp_ln674_reg_851 <= icmp_ln674_fu_368_p2;
        trunc_ln1086_reg_846 <= trunc_ln1086_fu_354_p1;
        trunc_ln414_1_reg_886 <= trunc_ln414_1_fu_418_p1;
        trunc_ln414_reg_878 <= trunc_ln414_fu_414_p1;
        trunc_ln674_reg_858 <= trunc_ln674_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_820 == 1'd1) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln414_reg_918 <= and_ln414_fu_606_p2;
        shl_ln414_reg_912 <= shl_ln414_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_155 <= ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_218_p2 == 1'd1))) begin
        bLast_reg_803 <= bLast_fu_223_p2;
        icmp_ln1104_reg_811 <= icmp_ln1104_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_reg_803_pp0_iter1_reg <= bLast_reg_803;
        icmp_ln1073_reg_799 <= icmp_ln1073_fu_218_p2;
        icmp_ln1073_reg_799_pp0_iter1_reg <= icmp_ln1073_reg_799;
        icmp_ln1104_reg_811_pp0_iter1_reg <= icmp_ln1104_reg_811;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        bLast_reg_803_pp0_iter2_reg <= bLast_reg_803_pp0_iter1_reg;
        bLast_reg_803_pp0_iter3_reg <= bLast_reg_803_pp0_iter2_reg;
        icmp_ln1073_reg_799_pp0_iter2_reg <= icmp_ln1073_reg_799_pp0_iter1_reg;
        icmp_ln1084_reg_820_pp0_iter2_reg <= icmp_ln1084_reg_820;
        icmp_ln1085_reg_841_pp0_iter2_reg <= icmp_ln1085_reg_841;
        icmp_ln1104_reg_811_pp0_iter2_reg <= icmp_ln1104_reg_811_pp0_iter1_reg;
        icmp_ln1104_reg_811_pp0_iter3_reg <= icmp_ln1104_reg_811_pp0_iter2_reg;
        icmp_ln414_reg_870_pp0_iter2_reg <= icmp_ln414_reg_870;
        sub_ln674_7_reg_836_pp0_iter2_reg <= sub_ln674_7_reg_836;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_bound_per_npc_read_reg_760 <= cols_bound_per_npc_dout;
        last_blk_width_read_reg_767 <= last_blk_width_dout;
        rows_read_reg_755 <= rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_799 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1084_reg_820 <= icmp_ln1084_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_799 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd0))) begin
        icmp_ln674_1_reg_824 <= icmp_ln674_1_fu_297_p2;
        sub_ln674_7_reg_836 <= sub_ln674_7_fu_331_p2;
        trunc_ln674_1_reg_830 <= trunc_ln674_1_fu_303_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_820 == 1'd0) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln674_3_reg_892 <= lshr_ln674_3_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_820 == 1'd1) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1085_reg_841 == 1'd0))) begin
        lshr_ln674_reg_902 <= lshr_ln674_fu_519_p2;
        sub_ln414_reg_907 <= sub_ln414_fu_525_p2;
        sub_ln674_2_reg_897 <= sub_ln674_2_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (bLast_reg_803_pp0_iter2_reg == 1'd1))) begin
        sub_ln674_8_reg_934 <= sub_ln674_8_fu_712_p2;
    end
end

always @ (*) begin
    if ((icmp_ln1073_fu_218_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        in_mat_418_blk_n = in_mat_418_full_n;
    end else begin
        in_mat_418_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_mat_418_write = 1'b1;
    end else begin
        in_mat_418_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_blk_n = last_blk_width_empty_n;
    end else begin
        last_blk_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_read = 1'b1;
    end else begin
        last_blk_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_820 == 1'd1) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state6 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_218_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_218_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1073_fu_208_p2 = (i_reg_144 + 31'd1);

assign add_ln1090_fu_378_p2 = ($signed(zext_ln1079_1_fu_261_p1) + $signed(5'd31));

assign add_ln1093_fu_202_p2 = (last_blk_width_cast1_i_fu_188_p1 + 6'd31);

assign add_ln1105_fu_233_p2 = (j_reg_133 + 32'd1);

assign add_ln674_1_fu_402_p2 = (sub_ln674_3_fu_396_p2 + 6'd31);

assign add_ln674_fu_484_p2 = ($signed(trunc_ln674_reg_858) + $signed(6'd33));

assign and_ln414_1_fu_695_p2 = (xor_ln414_fu_690_p2 & localbuffer_V_fu_668_p3);

assign and_ln414_2_fu_701_p2 = (select_ln414_3_fu_684_p3 & and_ln414_reg_918);

assign and_ln414_fu_606_p2 = (shl_ln414_1_fu_594_p2 & lshr_ln414_1_fu_600_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (in_mat_418_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op102_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (in_mat_418_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op102_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (in_mat_418_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op102_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((ldata1_empty_n == 1'b0) & (ap_predicate_op102_read_state6 == 1'b1));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter4 = ((icmp_ln1104_reg_811_pp0_iter3_reg == 1'd1) & (in_mat_418_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_155 = 'bx;

always @ (*) begin
    ap_predicate_op102_read_state6 = ((icmp_ln1084_reg_820 == 1'd1) & (icmp_ln1073_reg_799_pp0_iter1_reg == 1'd1));
end

assign bLast_fu_223_p2 = ((j_reg_133 == sub_i_reg_779) ? 1'b1 : 1'b0);

assign grp_fu_164_p2 = (32'd32 - rem_fu_94);

assign grp_fu_169_p2 = (6'd31 - trunc_ln674_reg_858);

assign icmp_ln1073_fu_218_p2 = (($signed(zext_ln1053_fu_214_p1) < $signed(bound_reg_774)) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_275_p2 = (($signed(rem_fu_94) < $signed(zext_ln1079_fu_257_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_348_p2 = ((rem_fu_94 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1104_fu_228_p2 = (($signed(j_reg_133) < $signed(cols_bound_per_npc_read_reg_760)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_408_p2 = ((rem_fu_94 > sext_ln1090_fu_384_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_297_p2 = ((grp_fu_164_p2 > sub_ln1093_fu_291_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_368_p2 = ((tmp_fu_358_p4 != 27'd0) ? 1'b1 : 1'b0);

assign in_mat_418_din = (select_ln1078_fu_726_p3 & ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_155);

assign j_3_fu_239_p3 = ((bLast_fu_223_p2[0:0] == 1'b1) ? 32'd0 : add_ln1105_fu_233_p2);

assign last_blk_width_cast1_i_fu_188_p1 = last_blk_width_read_reg_767;

assign localbuffer_V_6_fu_631_p1 = p_Result_11_fu_626_p2[7:0];

assign localbuffer_V_fu_668_p3 = ((icmp_ln1085_reg_841_pp0_iter2_reg[0:0] == 1'b1) ? 8'd0 : p_Result_8_fu_662_p2);

assign lshr_ln414_1_fu_600_p2 = 8'd255 >> zext_ln414_3_fu_584_p1;

assign lshr_ln414_fu_656_p2 = 8'd255 >> zext_ln414_fu_653_p1;

assign lshr_ln674_1_fu_638_p2 = 32'd4294967295 >> zext_ln674_1_fu_635_p1;

assign lshr_ln674_2_fu_533_p2 = 32'd4294967295 >> zext_ln674_2_fu_530_p1;

assign lshr_ln674_3_fu_468_p2 = select_ln674_4_fu_451_p3 >> zext_ln674_3_fu_464_p1;

assign lshr_ln674_4_fu_620_p2 = 32'd4294967295 >> zext_ln674_4_fu_617_p1;

assign lshr_ln674_5_fu_720_p2 = 8'd255 >> zext_ln674_5_fu_717_p1;

assign lshr_ln674_fu_519_p2 = select_ln674_1_fu_496_p3 >> zext_ln674_fu_515_p1;

assign p_Result_10_fu_706_p2 = (and_ln414_2_fu_701_p2 | and_ln414_1_fu_695_p2);

assign p_Result_11_fu_626_p2 = (lshr_ln674_4_fu_620_p2 & lshr_ln674_3_reg_892);

assign p_Result_8_fu_662_p2 = (tmp_14_fu_649_p1 & lshr_ln414_fu_656_p2);

assign p_Result_9_fu_539_p2 = (lshr_ln674_2_fu_533_p2 & ldata1_dout);

assign p_Result_s_fu_644_p2 = (lshr_ln674_reg_902 & lshr_ln674_1_fu_638_p2);

assign ptr_width_minus_fu_265_p3 = ((bLast_reg_803[0:0] == 1'b1) ? sub4_i_reg_784 : 6'd24);

assign rem_1_fu_422_p2 = (rem_fu_94 + zext_ln1080_fu_271_p1);

assign rem_2_fu_337_p2 = (rem_fu_94 - zext_ln1079_fu_257_p1);

assign select_ln1078_fu_726_p3 = ((bLast_reg_803_pp0_iter3_reg[0:0] == 1'b1) ? lshr_ln674_5_fu_720_p2 : 8'd255);

assign select_ln1093_fu_281_p3 = ((bLast_reg_803[0:0] == 1'b1) ? add_ln1093_reg_789 : 6'd39);

assign select_ln414_1_fu_559_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? trunc_ln414_1_reg_886 : trunc_ln414_reg_878);

assign select_ln414_2_fu_564_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? sub_ln414_1_fu_549_p2 : trunc_ln414_reg_878);

assign select_ln414_3_fu_684_p3 = ((icmp_ln414_reg_870_pp0_iter2_reg[0:0] == 1'b1) ? tmp_12_fu_675_p4 : shl_ln414_reg_912);

assign select_ln414_fu_554_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? trunc_ln414_reg_878 : trunc_ln414_1_reg_886);

assign select_ln674_1_fu_496_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? tmp_8_fu_474_p4 : p_Val2_s_fu_98);

assign select_ln674_2_fu_503_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? grp_fu_169_p2 : trunc_ln674_reg_858);

assign select_ln674_3_fu_323_p3 = ((icmp_ln674_1_fu_297_p2[0:0] == 1'b1) ? sub_ln674_4_fu_311_p2 : sub_ln674_6_fu_317_p2);

assign select_ln674_4_fu_451_p3 = ((icmp_ln674_1_reg_824[0:0] == 1'b1) ? tmp_13_fu_436_p4 : p_Val2_s_fu_98);

assign select_ln674_5_fu_458_p3 = ((icmp_ln674_1_reg_824[0:0] == 1'b1) ? sub_ln674_5_fu_446_p2 : trunc_ln674_1_reg_830);

assign select_ln674_fu_489_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? add_ln674_fu_484_p2 : grp_fu_169_p2);

assign sext_ln1090_1_fu_388_p1 = add_ln1090_fu_378_p2;

assign sext_ln1090_fu_384_p1 = add_ln1090_fu_378_p2;

assign shl_ln414_1_fu_594_p2 = 8'd255 << zext_ln414_2_fu_580_p1;

assign shl_ln414_fu_588_p2 = tmp_16_fu_545_p1 << zext_ln414_1_fu_576_p1;

assign sub4_i_fu_196_p2 = ($signed(6'd32) - $signed(last_blk_width_cast1_i_fu_188_p1));

assign sub_i_fu_191_p2 = ($signed(cols_bound_per_npc_read_reg_760) + $signed(32'd4294967295));

assign sub_ln1093_fu_291_p2 = (zext_ln1093_fu_287_p1 - rem_fu_94);

assign sub_ln414_1_fu_549_p2 = (4'd7 - trunc_ln414_reg_878);

assign sub_ln414_2_fu_570_p2 = (4'd7 - select_ln414_fu_554_p3);

assign sub_ln414_fu_525_p2 = ($signed(4'd8) - $signed(trunc_ln1086_reg_846));

assign sub_ln674_2_fu_509_p2 = (6'd31 - select_ln674_fu_489_p3);

assign sub_ln674_3_fu_396_p2 = ($signed(trunc_ln1090_fu_392_p1) - $signed(sext_ln1090_1_fu_388_p1));

assign sub_ln674_4_fu_311_p2 = (trunc_ln674_1_fu_303_p1 - trunc_ln674_2_fu_307_p1);

assign sub_ln674_5_fu_446_p2 = (6'd31 - trunc_ln674_1_reg_830);

assign sub_ln674_6_fu_317_p2 = (trunc_ln674_2_fu_307_p1 - trunc_ln674_1_fu_303_p1);

assign sub_ln674_7_fu_331_p2 = (6'd31 - select_ln674_3_fu_323_p3);

assign sub_ln674_8_fu_712_p2 = ($signed(4'd8) - $signed(last_blk_width_read_reg_767));

integer ap_tvar_int_0;

always @ (shl_ln414_reg_912) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 7 - 0) begin
            tmp_12_fu_675_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_12_fu_675_p4[ap_tvar_int_0] = shl_ln414_reg_912[7 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Val2_s_fu_98) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_13_fu_436_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_13_fu_436_p4[ap_tvar_int_1] = p_Val2_s_fu_98[31 - ap_tvar_int_1];
        end
    end
end

assign tmp_14_fu_649_p1 = p_Result_s_fu_644_p2[7:0];

assign tmp_16_fu_545_p1 = p_Result_9_fu_539_p2[7:0];

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_98) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_8_fu_474_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_8_fu_474_p4[ap_tvar_int_2] = p_Val2_s_fu_98[31 - ap_tvar_int_2];
        end
    end
end

assign tmp_fu_358_p4 = {{grp_fu_164_p2[31:5]}};

assign trunc_ln1086_fu_354_p1 = rem_fu_94[3:0];

assign trunc_ln1090_fu_392_p1 = rem_fu_94[5:0];

assign trunc_ln414_1_fu_418_p1 = add_ln1090_fu_378_p2[3:0];

assign trunc_ln414_fu_414_p1 = rem_fu_94[3:0];

assign trunc_ln674_1_fu_303_p1 = grp_fu_164_p2[5:0];

assign trunc_ln674_2_fu_307_p1 = sub_ln1093_fu_291_p2[5:0];

assign trunc_ln674_fu_374_p1 = grp_fu_164_p2[5:0];

assign xf_bits_per_clock_fu_251_p3 = ((bLast_reg_803[0:0] == 1'b1) ? last_blk_width_read_reg_767 : 4'd8);

assign xor_ln414_fu_690_p2 = (8'd255 ^ and_ln414_reg_918);

assign zext_ln1053_fu_214_p1 = i_reg_144;

assign zext_ln1079_1_fu_261_p1 = xf_bits_per_clock_fu_251_p3;

assign zext_ln1079_fu_257_p1 = xf_bits_per_clock_fu_251_p3;

assign zext_ln1080_fu_271_p1 = ptr_width_minus_fu_265_p3;

assign zext_ln1093_fu_287_p1 = select_ln1093_fu_281_p3;

assign zext_ln414_1_fu_576_p1 = select_ln414_2_fu_564_p3;

assign zext_ln414_2_fu_580_p1 = select_ln414_1_fu_559_p3;

assign zext_ln414_3_fu_584_p1 = sub_ln414_2_fu_570_p2;

assign zext_ln414_fu_653_p1 = sub_ln414_reg_907;

assign zext_ln674_1_fu_635_p1 = sub_ln674_2_reg_897;

assign zext_ln674_2_fu_530_p1 = add_ln674_1_reg_865;

assign zext_ln674_3_fu_464_p1 = select_ln674_5_fu_458_p3;

assign zext_ln674_4_fu_617_p1 = sub_ln674_7_reg_836_pp0_iter2_reg;

assign zext_ln674_5_fu_717_p1 = sub_ln674_8_reg_934;

assign zext_ln674_fu_515_p1 = select_ln674_2_fu_503_p3;

endmodule //resize_accel_AxiStream2MatStream
